{
  result.parity=UNKNOWN_PARITY;
  int total=counters[0] + counters[1] + counters[2]+ counters[3];
  int average=total * 10 / 7;
  for (int x=0; x < 4; x++) {
    counters[x]=counters[x] * 100 / average;
  }
  for (int x=0; x < 10; x++) {
    boolean match=true;
    byte[] pattern=DIGIT_PATTERNS[x];
    for (int y=0; y < 4; y++) {
      int diff=counters[y] - pattern[y];
      if (diff > TOLERANCE || diff < -TOLERANCE) {
        match=false;
        break;
      }
    }
    if (match) {
      result.parity=ODD_PARITY;
      result.character=(char)((int)'0' + x);
      return;
    }
  }
  if (checkBothParities) {
    for (int x=0; x < 10; x++) {
      boolean match=true;
      byte[] pattern=EVEN_PARITY_PATTERNS[x];
      for (int y=0; y < 4; y++) {
        int diff=counters[y] - pattern[y];
        if (diff > TOLERANCE || diff < -TOLERANCE) {
          match=false;
          break;
        }
      }
      if (match) {
        result.parity=EVEN_PARITY;
        result.character=(char)((int)'0' + x);
        return;
      }
    }
  }
}
