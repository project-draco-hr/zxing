{
  String redirect;
  if (request.getParameter("error") != null) {
    log.warn("OAuth error: {}",Arrays.toString(request.getParameterValues("error")));
    redirect=baseURL;
  }
 else {
    GenericUrl url1=new GenericUrl(request.getRequestURL().toString());
    url1.setRawPath("/oauth2callback");
    String callbackURL=url1.build();
    String code=request.getParameter("code");
    if (code == null) {
      log.info("New OAuth flow");
      AuthorizationCodeFlow flow=authUtil.newAuthorizationCodeFlow();
      GenericUrl url=flow.newAuthorizationUrl().setRedirectUri(callbackURL);
      url.set("approval_prompt","force");
      redirect=url.build();
    }
 else {
      log.info("OAuth response, code: {}",code);
      AuthorizationCodeFlow flow=authUtil.newAuthorizationCodeFlow();
      TokenResponse tokenResponse=flow.newTokenRequest(code).setRedirectUri(callbackURL).execute();
      String userId=((GoogleTokenResponse)tokenResponse).parseIdToken().getPayload().getSubject();
      flow.createAndStoreCredential(tokenResponse,userId);
      ResourceBundle resources=ResourceBundle.getBundle("Strings",request.getLocale());
      bootstrapNewUser(userId,resources);
      redirect="glass/index.jspx";
    }
  }
  response.sendRedirect(redirect);
}
