def _startup(self):
    'Private method. Set up logstream, and set the environment\n        variables necessary for a piped build\n        '
    global _ac_config_logs
    global sconf_global
    global SConfFS
    self.lastEnvFs = self.env.fs
    self.env.fs = SConfFS
    self._createDir(self.confdir)
    self.confdir.up().add_ignore([self.confdir])
    if ((self.logfile is not None) and (not dryrun)):
        if (self.logfile in _ac_config_logs):
            log_mode = 'a'
        else:
            _ac_config_logs[self.logfile] = None
            log_mode = 'w'
        fp = open(str(self.logfile), log_mode)
        self.logstream = SCons.Util.Unbuffered(fp)
        self.logfile.dir.add_ignore([self.logfile])
        tb = traceback.extract_stack()[((-3) - self.depth)]
        old_fs_dir = SConfFS.getcwd()
        SConfFS.chdir(SConfFS.Top, change_os_dir=0)
        self.logstream.write(('file %s,line %d:\n\tConfigure(confdir = %s)\n' % (tb[0], tb[1], str(self.confdir))))
        SConfFS.chdir(old_fs_dir)
    else:
        self.logstream = None
    action = SCons.Action.Action(_createSource, _stringSource)
    sconfSrcBld = SCons.Builder.Builder(action=action)
    self.env.Append(BUILDERS={'SConfSourceBuilder': sconfSrcBld, })
    self.config_h_text = _ac_config_hs.get(self.config_h, '')
    self.active = 1
    sconf_global = self
