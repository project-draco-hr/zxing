{
  float expectedSymbolWidth;
  if (symbolsPerLine > 0) {
    expectedSymbolWidth=linesMatrix.getWidth() / (float)symbolsPerLine;
  }
 else {
    expectedSymbolWidth=linesMatrix.getWidth();
  }
  List<Float> symbolWidths=new ArrayList<Float>();
  int symbolStart=0;
  boolean lastWasSymbolStart=true;
  int[] blackCount=new int[linesMatrix.getWidth()];
  for (int x=BARCODE_START_OFFSET; x < linesMatrix.getWidth(); x++) {
    for (int y=0; y < linesMatrix.getHeight(); y++) {
      if (linesMatrix.get(x,y)) {
        blackCount[x]++;
      }
    }
    if (blackCount[x] == linesMatrix.getHeight()) {
      if (!lastWasSymbolStart) {
        float currentWidth=x - symbolStart;
        if (currentWidth > 0.75 * expectedSymbolWidth) {
          while (currentWidth > 1.5 * expectedSymbolWidth) {
            symbolWidths.add(expectedSymbolWidth);
            currentWidth-=expectedSymbolWidth;
          }
          symbolWidths.add(currentWidth);
          lastWasSymbolStart=true;
          symbolStart=x;
        }
      }
    }
 else {
      if (lastWasSymbolStart) {
        lastWasSymbolStart=false;
      }
    }
  }
  float currentWidth=linesMatrix.getWidth() - symbolStart;
  while (currentWidth > 1.5 * expectedSymbolWidth) {
    symbolWidths.add(expectedSymbolWidth);
    currentWidth-=expectedSymbolWidth;
  }
  symbolWidths.add(currentWidth);
  return symbolWidths;
}
