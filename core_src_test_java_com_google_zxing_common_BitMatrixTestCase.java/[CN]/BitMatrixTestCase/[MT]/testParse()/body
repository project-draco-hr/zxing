{
  BitMatrix emptyMatrix=new BitMatrix(3,3);
  BitMatrix fullMatrix=new BitMatrix(3,3);
  fullMatrix.setRegion(0,0,3,3);
  BitMatrix centerMatrix=new BitMatrix(3,3);
  centerMatrix.setRegion(1,1,1,1);
  BitMatrix emptyMatrix24=new BitMatrix(2,4);
  assertEquals(emptyMatrix,BitMatrix.parse("   \n   \n   \n","x"," "));
  assertEquals(emptyMatrix,BitMatrix.parse("   \n   \r\r\n   \n\r","x"," "));
  assertEquals(emptyMatrix,BitMatrix.parse("   \n   \n   ","x"," "));
  assertEquals(fullMatrix,BitMatrix.parse("xxx\nxxx\nxxx\n","x"," "));
  assertEquals(centerMatrix,BitMatrix.parse("   \n x \n   \n","x"," "));
  assertEquals(centerMatrix,BitMatrix.parse("      \n  x   \n      \n","x ","  "));
  try {
    assertEquals(centerMatrix,BitMatrix.parse("   \n xy\n   \n","x"," "));
    fail();
  }
 catch (  IllegalArgumentException ex) {
  }
  assertEquals(emptyMatrix24,BitMatrix.parse("  \n  \n  \n  \n","x"," "));
  assertEquals(centerMatrix,BitMatrix.parse(centerMatrix.toString("x",".","\n"),"x","."));
}
