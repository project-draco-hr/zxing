{
{
    String expected=" 1 1 1 1 1 1 1 0           0 1 1 1 1 1 1 1\n" + " 1 0 0 0 0 0 1 0           0 1 0 0 0 0 0 1\n" + " 1 0 1 1 1 0 1 0           0 1 0 1 1 1 0 1\n"+ " 1 0 1 1 1 0 1 0           0 1 0 1 1 1 0 1\n"+ " 1 0 1 1 1 0 1 0           0 1 0 1 1 1 0 1\n"+ " 1 0 0 0 0 0 1 0           0 1 0 0 0 0 0 1\n"+ " 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\n"+ " 0 0 0 0 0 0 0 0           0 0 0 0 0 0 0 0\n"+ "             1                            \n"+ "             0                            \n"+ "             1                            \n"+ "             0                            \n"+ "             1                            \n"+ " 0 0 0 0 0 0 0 0 1                        \n"+ " 1 1 1 1 1 1 1 0                          \n"+ " 1 0 0 0 0 0 1 0                          \n"+ " 1 0 1 1 1 0 1 0                          \n"+ " 1 0 1 1 1 0 1 0                          \n"+ " 1 0 1 1 1 0 1 0                          \n"+ " 1 0 0 0 0 0 1 0                          \n"+ " 1 1 1 1 1 1 1 0                          \n";
    ByteMatrix matrix=new ByteMatrix(21,21);
    MatrixUtil.clearMatrix(matrix);
    MatrixUtil.embedBasicPatterns(1,matrix);
    assertEquals(expected,matrix.toString());
  }
{
    String expected=" 1 1 1 1 1 1 1 0                   0 1 1 1 1 1 1 1\n" + " 1 0 0 0 0 0 1 0                   0 1 0 0 0 0 0 1\n" + " 1 0 1 1 1 0 1 0                   0 1 0 1 1 1 0 1\n"+ " 1 0 1 1 1 0 1 0                   0 1 0 1 1 1 0 1\n"+ " 1 0 1 1 1 0 1 0                   0 1 0 1 1 1 0 1\n"+ " 1 0 0 0 0 0 1 0                   0 1 0 0 0 0 0 1\n"+ " 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1\n"+ " 0 0 0 0 0 0 0 0                   0 0 0 0 0 0 0 0\n"+ "             1                                    \n"+ "             0                                    \n"+ "             1                                    \n"+ "             0                                    \n"+ "             1                                    \n"+ "             0                                    \n"+ "             1                                    \n"+ "             0                                    \n"+ "             1                   1 1 1 1 1        \n"+ " 0 0 0 0 0 0 0 0 1               1 0 0 0 1        \n"+ " 1 1 1 1 1 1 1 0                 1 0 1 0 1        \n"+ " 1 0 0 0 0 0 1 0                 1 0 0 0 1        \n"+ " 1 0 1 1 1 0 1 0                 1 1 1 1 1        \n"+ " 1 0 1 1 1 0 1 0                                  \n"+ " 1 0 1 1 1 0 1 0                                  \n"+ " 1 0 0 0 0 0 1 0                                  \n"+ " 1 1 1 1 1 1 1 0                                  \n";
    ByteMatrix matrix=new ByteMatrix(25,25);
    MatrixUtil.clearMatrix(matrix);
    MatrixUtil.embedBasicPatterns(2,matrix);
    assertEquals(expected,matrix.toString());
  }
}
