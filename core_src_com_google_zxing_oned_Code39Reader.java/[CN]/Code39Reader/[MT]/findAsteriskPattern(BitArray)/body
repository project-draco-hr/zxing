{
  int width=row.getSize();
  int rowOffset=0;
  while (rowOffset < width) {
    if (row.get(rowOffset)) {
      break;
    }
    rowOffset++;
  }
  int counterPosition=0;
  int[] counters=new int[9];
  int patternStart=rowOffset;
  boolean isWhite=false;
  int patternLength=counters.length;
  for (int i=rowOffset; i < width; i++) {
    boolean pixel=row.get(i);
    if ((!pixel && isWhite) || (pixel && !isWhite)) {
      counters[counterPosition]++;
    }
 else {
      if (counterPosition == patternLength - 1) {
        try {
          if (toNarrowWidePattern(counters) == ASTERISK_ENCODING) {
            return new int[]{patternStart,i};
          }
        }
 catch (        ReaderException re) {
        }
        patternStart+=counters[0] + counters[1];
        for (int y=2; y < patternLength; y++) {
          counters[y - 2]=counters[y];
        }
        counterPosition--;
      }
 else {
        counterPosition++;
      }
      counters[counterPosition]=1;
      isWhite=!isWhite;
    }
  }
  throw new ReaderException("Can't find pattern");
}
