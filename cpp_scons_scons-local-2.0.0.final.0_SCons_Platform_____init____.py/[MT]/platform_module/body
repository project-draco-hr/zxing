def platform_module(name=platform_default()):
    'Return the imported module for the platform.\n\n    This looks for a module name that matches the specified argument.\n    If the name is unspecified, we fetch the appropriate default for\n    our execution environment.\n    '
    full_name = ('SCons.Platform.' + name)
    if (full_name not in sys.modules):
        if (os.name == 'java'):
            eval(full_name)
        else:
            try:
                (file, path, desc) = imp.find_module(name, sys.modules['SCons.Platform'].__path__)
                try:
                    mod = imp.load_module(full_name, file, path, desc)
                finally:
                    if file:
                        file.close()
            except ImportError:
                try:
                    import zipimport
                    importer = zipimport.zipimporter(sys.modules['SCons.Platform'].__path__[0])
                    mod = importer.load_module(full_name)
                except ImportError:
                    raise SCons.Errors.UserError(("No platform named '%s'" % name))
            setattr(SCons.Platform, name, mod)
    return sys.modules[full_name]
