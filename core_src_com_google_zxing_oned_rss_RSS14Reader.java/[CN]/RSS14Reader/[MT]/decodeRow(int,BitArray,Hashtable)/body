{
  Pair leftPair=decodePair(row,false,rowNumber,hints);
  if (leftPair != null) {
    possibleLeftPairs.add(leftPair);
  }
  row.reverse();
  Pair rightPair=decodePair(row,true,rowNumber,hints);
  if (rightPair != null) {
    possibleRightPairs.add(rightPair);
  }
  row.reverse();
  int numLeftPairs=possibleLeftPairs.size();
  int numRightPairs=possibleRightPairs.size();
  for (int l=0; l < numLeftPairs; l++) {
    Pair left=(Pair)possibleLeftPairs.elementAt(l);
    for (int r=0; r < numRightPairs; r++) {
      Pair right=(Pair)possibleRightPairs.elementAt(r);
      if (checkChecksum(left,right)) {
        return constructResult(left,right);
      }
    }
  }
  throw NotFoundException.getNotFoundInstance();
}
