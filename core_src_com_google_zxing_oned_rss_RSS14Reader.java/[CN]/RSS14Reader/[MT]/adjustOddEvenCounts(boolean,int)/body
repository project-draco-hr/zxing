{
  int oddSum=count(oddCounts);
  int evenSum=count(evenCounts);
  int mismatch=oddSum + evenSum - numModules;
  boolean oddParityBad=(oddSum & 0x01) == (outsideChar ? 1 : 0);
  boolean evenParityBad=(evenSum & 0x01) == 1;
  boolean incrementOdd=false;
  boolean decrementOdd=false;
  boolean incrementEven=false;
  boolean decrementEven=false;
  if (outsideChar) {
    if (oddSum > 12) {
      decrementOdd=true;
    }
 else     if (oddSum < 4) {
      incrementOdd=true;
    }
    if (evenSum > 12) {
      decrementEven=true;
    }
 else     if (evenSum < 4) {
      incrementEven=true;
    }
  }
 else {
    if (oddSum > 11) {
      decrementOdd=true;
    }
 else     if (oddSum < 5) {
      incrementOdd=true;
    }
    if (evenSum > 10) {
      decrementEven=true;
    }
 else     if (evenSum < 4) {
      incrementEven=true;
    }
  }
  if (mismatch == 1) {
    if (oddParityBad) {
      if (evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
      decrementOdd=true;
    }
 else {
      if (!evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
      decrementEven=true;
    }
  }
 else   if (mismatch == -1) {
    if (oddParityBad) {
      if (evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
      incrementOdd=true;
    }
 else {
      if (!evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
      incrementEven=true;
    }
  }
 else   if (mismatch == 0) {
    if (oddParityBad) {
      if (!evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
      if (oddSum < evenSum) {
        incrementOdd=true;
        decrementEven=true;
      }
 else {
        decrementOdd=true;
        incrementEven=true;
      }
    }
 else {
      if (evenParityBad) {
        throw NotFoundException.getNotFoundInstance();
      }
    }
  }
 else {
    throw NotFoundException.getNotFoundInstance();
  }
  if (incrementOdd) {
    if (decrementOdd) {
      throw NotFoundException.getNotFoundInstance();
    }
    increment(oddCounts,oddRoundingErrors);
  }
  if (decrementOdd) {
    decrement(oddCounts,oddRoundingErrors);
  }
  if (incrementEven) {
    if (decrementEven) {
      throw NotFoundException.getNotFoundInstance();
    }
    increment(evenCounts,oddRoundingErrors);
  }
  if (decrementEven) {
    decrement(evenCounts,evenRoundingErrors);
  }
}
