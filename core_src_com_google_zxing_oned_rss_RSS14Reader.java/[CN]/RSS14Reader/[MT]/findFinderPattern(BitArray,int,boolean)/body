{
  int[] counters=decodeFinderCounters;
  counters[0]=0;
  counters[1]=0;
  counters[2]=0;
  counters[3]=0;
  int width=row.getSize();
  boolean isWhite=false;
  while (rowOffset < width) {
    isWhite=!row.get(rowOffset);
    if (rightFinderPattern == isWhite) {
      break;
    }
    rowOffset++;
  }
  int counterPosition=0;
  int patternStart=rowOffset;
  for (int x=rowOffset; x < width; x++) {
    boolean pixel=row.get(x);
    if (pixel ^ isWhite) {
      counters[counterPosition]++;
    }
 else {
      if (counterPosition == 3) {
        if (isFinderPattern(counters)) {
          return new int[]{patternStart,x};
        }
        patternStart+=counters[0] + counters[1];
        counters[0]=counters[2];
        counters[1]=counters[3];
        counters[2]=0;
        counters[3]=0;
        counterPosition--;
      }
 else {
        counterPosition++;
      }
      counters[counterPosition]=1;
      isWhite=!isWhite;
    }
  }
  throw NotFoundException.getNotFoundInstance();
}
