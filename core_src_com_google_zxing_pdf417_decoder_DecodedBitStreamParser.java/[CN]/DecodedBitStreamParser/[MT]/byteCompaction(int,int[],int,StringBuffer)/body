{
  if (mode == BYTE_COMPACTION_MODE_LATCH) {
    int count=0;
    long value=0;
    char[] decodedData=new char[6];
    int[] byteCompactedCodewords=new int[6];
    boolean end=false;
    while ((codeIndex < codewords[0]) && !end) {
      int code=codewords[codeIndex++];
      if (code < TEXT_COMPACTION_MODE_LATCH) {
        byteCompactedCodewords[count]=code;
        count++;
        value*=900;
        value+=code;
      }
 else {
        if ((code == TEXT_COMPACTION_MODE_LATCH) || (code == BYTE_COMPACTION_MODE_LATCH) || (code == NUMERIC_COMPACTION_MODE_LATCH)|| (code == BYTE_COMPACTION_MODE_LATCH_6)|| (code == BEGIN_MACRO_PDF417_CONTROL_BLOCK)|| (code == BEGIN_MACRO_PDF417_OPTIONAL_FIELD)|| (code == MACRO_PDF417_TERMINATOR)) {
        }
        codeIndex--;
        end=true;
      }
      if ((count % 5 == 0) && (count > 0)) {
        for (int j=0; j < 6; ++j) {
          decodedData[5 - j]=(char)(value % 256);
          value>>=8;
        }
        result.append(decodedData);
        count=0;
      }
    }
    for (int i=((count / 5) * 5); i < count; i++) {
      result.append((char)byteCompactedCodewords[i]);
    }
  }
 else   if (mode == BYTE_COMPACTION_MODE_LATCH_6) {
    int count=0;
    long value=0;
    boolean end=false;
    while ((codeIndex < codewords[0]) && !end) {
      int code=codewords[codeIndex++];
      if (code < TEXT_COMPACTION_MODE_LATCH) {
        count+=1;
        value*=900;
        value+=code;
      }
 else {
        if ((code == TEXT_COMPACTION_MODE_LATCH) || (code == BYTE_COMPACTION_MODE_LATCH) || (code == NUMERIC_COMPACTION_MODE_LATCH)|| (code == BYTE_COMPACTION_MODE_LATCH_6)|| (code == BEGIN_MACRO_PDF417_CONTROL_BLOCK)|| (code == BEGIN_MACRO_PDF417_OPTIONAL_FIELD)|| (code == MACRO_PDF417_TERMINATOR)) {
        }
        codeIndex--;
        end=true;
      }
      if ((count % 5 == 0) && (count > 0)) {
        char[] decodedData=new char[6];
        for (int j=0; j < 6; ++j) {
          decodedData[5 - j]=(char)(value % 256);
          value>>=8;
        }
        result.append(decodedData);
      }
    }
  }
  return codeIndex;
}
