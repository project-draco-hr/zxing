{
  BufferedImage image=ImageIO.read(uri.toURL());
  MonochromeBitmapSource src=new BufferedImageMonochromeBitmapSource(image);
  int width=src.getWidth();
  int height=src.getHeight();
  BufferedImage result=new BufferedImage(width,height,BufferedImage.TYPE_INT_ARGB);
  BitArray array=new BitArray(width);
  try {
    if (sMethod == BlackPointEstimationMethod.TWO_D_SAMPLING) {
      src.estimateBlackPoint(sMethod,0);
    }
  }
 catch (  ReaderException e) {
    System.out.println(e.toString());
    return;
  }
  for (int y=0; y < height; y++) {
    if (sMethod == BlackPointEstimationMethod.ROW_SAMPLING) {
      try {
        src.estimateBlackPoint(sMethod,y);
      }
 catch (      ReaderException e) {
        for (int x=0; x < width; x++) {
          result.setRGB(x,y,RED);
        }
        continue;
      }
    }
    src.getBlackRow(y,array,0,width);
    for (int x=0; x < width; x++) {
      result.setRGB(x,y,array.get(x) ? BLACK : WHITE);
    }
  }
  File output=getOutput(uri);
  System.out.printf("Writing output to %s\n",output);
  ImageIO.write(result,FORMAT,output);
}
