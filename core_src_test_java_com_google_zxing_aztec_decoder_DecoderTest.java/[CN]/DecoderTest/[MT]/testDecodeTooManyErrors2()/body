{
  BitMatrix matrix=BitMatrix.parse("" + ". X X . . X . X X . . . X . . X X X . . . X X . X X . \n" + "X X . X X . . X . . . X X . . . X X . X X X . X . X X \n"+ ". . . . X . . . X X X . X X . X X X X . X X . . X . . \n"+ "X . X X . . X . . . X X . X X . X . X X . . . . . X . \n"+ "X X . X . . X . X X . . . . . X X . . . . . X . . . X \n"+ "X . . X . . . . . . X . . . X . X X X X X X X . . . X \n"+ "X . . X X . . X . . X X . . . . . X . . . . . X X X . \n"+ ". . X X X X . X . . . . . X X X X X X . . . . . . X X \n"+ "X . . . X . X X X X X X . . X X X . X . X X X X X X . \n"+ "X . . X X X . X X X X X X X X X X X X X . . . X . X X \n"+ ". . . . X X . . . X . . . . . . . X X . . . X X . X . \n"+ ". . . X X X . . X X . X X X X X . X . . X . . . . . . \n"+ "X . . . . X . X . X . X . . . X . X . X X . X X . X X \n"+ "X . X . . X . X . X . X . X . X . X . . . . . X . X X \n"+ "X . X X X . . X . X . X . . . X . X . X X X . . . X X \n"+ "X X X X X X X X . X . X X X X X . X . X . X . X X X . \n"+ ". . . . . . . X . X . . . . . . . X X X X . . . X X X \n"+ "X X . . X . . X . X X X X X X X X X X X X X . . X . X \n"+ "X X X . X X X X . . X X X X . . X . . . . X . . X X X \n"+ ". . X X X X X . X . . . . X X X X . . X X X . X . X . \n"+ ". . X X . X . X . . . X . X X . X X . . . . X X . . . \n"+ "X . . . X . X . X X X X X X . . X . X X X X X . X . . \n"+ ". X . . . X X X . . . . . X . . . . . X X X X X . X . \n"+ "X . . X . X X X X . X . X . . . . X . X X . X . . X . \n"+ "X . . . X X . X . X X X X X X X X . X X X X . . X X . \n"+ ". X X X X . . X . . X X X . X X . . X . . . . X X X . \n"+ "X X . . . X X . . X . X . . . . X X . X . . X . X . X \n","X ",". ");
  AztecDetectorResult r=new AztecDetectorResult(matrix,NO_POINTS,true,16,4);
  new Decoder().decode(r);
}
