def generate(env):
    'Add a Builder factory function and construction variables for\n    Perforce to an Environment.'

    def PerforceFactory(env=env):
        ' '
        import SCons.Warnings as W
        W.warn(W.DeprecatedSourceCodeWarning, 'The Perforce() factory is deprecated and there is no replacement.')
        return SCons.Builder.Builder(action=PerforceAction, env=env)
    env.Perforce = PerforceFactory
    env['P4'] = 'p4'
    env['P4FLAGS'] = SCons.Util.CLVar('')
    env['P4COM'] = '$P4 $P4FLAGS sync $TARGET'
    try:
        environ = env['ENV']
    except KeyError:
        environ = {}
        env['ENV'] = environ
    environ['PWD'] = env.Dir('#').get_abspath()
    for var in _import_env:
        v = os.environ.get(var)
        if v:
            environ[var] = v
    if SCons.Util.can_read_reg:
        try:
            k = SCons.Util.RegOpenKeyEx(SCons.Util.hkey_mod.HKEY_LOCAL_MACHINE, 'Software\\Perforce\\environment')
            (val, tok) = SCons.Util.RegQueryValueEx(k, 'P4INSTROOT')
            addPathIfNotExists(environ, 'PATH', val)
        except SCons.Util.RegError:
            pass
