__revision__ = 'src/script/scons.py 5023 2010/06/14 22:05:46 scons'
__version__ = '2.0.0.final.0'
__build__ = 'r5023'
__buildsys__ = 'scons-dev'
__date__ = '2010/06/14 22:05:46'
__developer__ = 'scons'
import os
import os.path
import sys
try:
    if (sys.version_info >= (3, 0, 0)):
        msg = 'scons: *** SCons version %s does not run under Python version %s.\n'
        sys.stderr.write((msg % (__version__, sys.version.split()[0])))
        sys.exit(1)
except AttributeError:
    pass
script_dir = sys.path[0]
if (script_dir in sys.path):
    sys.path.remove(script_dir)
libs = []
if ('SCONS_LIB_DIR' in os.environ):
    libs.append(os.environ['SCONS_LIB_DIR'])
local_version = ('scons-local-' + __version__)
local = 'scons-local'
if script_dir:
    local_version = os.path.join(script_dir, local_version)
    local = os.path.join(script_dir, local)
libs.append(os.path.abspath(local_version))
libs.append(os.path.abspath(local))
scons_version = ('scons-%s' % __version__)
prefs = []
if (sys.platform == 'win32'):
    prefs.append(sys.prefix)
    prefs.append(os.path.join(sys.prefix, 'Lib', 'site-packages'))
else:
    if (script_dir == 'bin'):
        prefs.append(os.getcwd())
    else:
        if ((script_dir == '.') or (script_dir == '')):
            script_dir = os.getcwd()
        (head, tail) = os.path.split(script_dir)
        if (tail == 'bin'):
            prefs.append(head)
    (head, tail) = os.path.split(sys.prefix)
    if (tail == 'usr'):
        prefs.append(sys.prefix)
        prefs.append(os.path.join(sys.prefix, 'local'))
    elif (tail == 'local'):
        (h, t) = os.path.split(head)
        if (t == 'usr'):
            prefs.append(sys.prefix)
            prefs.append(head)
        else:
            prefs.append(sys.prefix)
    else:
        prefs.append(sys.prefix)
    temp = [os.path.join(x, 'lib') for x in prefs]
    temp.extend([os.path.join(x, 'lib', ('python' + sys.version[:3]), 'site-packages') for x in prefs])
    prefs = temp
    try:
        libpath = os.__file__
    except AttributeError:
        pass
    else:
        (libpath, tail) = os.path.split(libpath)
        (libpath, tail) = os.path.split(libpath)
        prefs.append(libpath)
    try:
        import pkg_resources
    except ImportError:
        pass
    else:
        try:
            d = pkg_resources.get_distribution('scons')
        except pkg_resources.DistributionNotFound:
            pass
        else:
            prefs.append(d.location)
libs.extend([os.path.join(x, scons_version) for x in prefs])
libs.extend([os.path.join(x, 'scons') for x in prefs])
sys.path = (libs + sys.path)
if (__name__ == '__main__'):
    import SCons.Script
    SCons.Script.main()
