{
  cameraResolution=getMaximumCameraResolution();
  int minDimension=(cameraResolution.x < cameraResolution.y) ? cameraResolution.x : cameraResolution.y;
  int diagonalResolution=(int)Math.sqrt(cameraResolution.x * cameraResolution.x + cameraResolution.y * cameraResolution.y);
  float diagonalFov=getFieldOfView();
  float fov=diagonalFov * minDimension / diagonalResolution;
  double objectSize=Math.tan(Math.toRadians(fov / 2.0)) * getMinimumFocusDistance() * 2;
  double crop=3.0 / objectSize;
  int nativeResolution=(int)(minDimension * crop);
  nativeResolution=((nativeResolution + 7) >> 3) << 3;
  if (nativeResolution > minDimension) {
    nativeResolution=minDimension;
  }
  double dpi=nativeResolution / objectSize;
  stillMultiplier=1;
  if (dpi > 200) {
    stillMultiplier=(int)(dpi / 200 + 1);
  }
  stillResolution=new Point(nativeResolution,nativeResolution);
  Log.v(TAG,"FOV " + fov + " objectSize "+ objectSize+ " crop "+ crop+ " dpi "+ dpi+ " nativeResolution "+ nativeResolution+ " stillMultiplier "+ stillMultiplier);
}
