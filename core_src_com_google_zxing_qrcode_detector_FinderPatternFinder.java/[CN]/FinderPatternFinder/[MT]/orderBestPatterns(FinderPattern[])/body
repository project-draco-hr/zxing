{
  float abDistance=distance(patterns[0],patterns[1]);
  float bcDistance=distance(patterns[1],patterns[2]);
  float acDistance=distance(patterns[0],patterns[2]);
  FinderPattern topLeft;
  FinderPattern topRight;
  FinderPattern bottomLeft;
  if (bcDistance >= abDistance && bcDistance >= acDistance) {
    topLeft=patterns[0];
    topRight=patterns[1];
    bottomLeft=patterns[2];
  }
 else   if (acDistance >= bcDistance && acDistance >= abDistance) {
    topLeft=patterns[1];
    topRight=patterns[0];
    bottomLeft=patterns[2];
  }
 else {
    topLeft=patterns[2];
    topRight=patterns[0];
    bottomLeft=patterns[1];
  }
  if ((bottomLeft.getY() - topLeft.getY()) * (topRight.getX() - topLeft.getX()) < (bottomLeft.getX() - topLeft.getX()) * (topRight.getY() - topLeft.getY())) {
    FinderPattern temp=topRight;
    topRight=bottomLeft;
    bottomLeft=temp;
  }
  return new FinderPattern[]{bottomLeft,topLeft,topRight};
}
