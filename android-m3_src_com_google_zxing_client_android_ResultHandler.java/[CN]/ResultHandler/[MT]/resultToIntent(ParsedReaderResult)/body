{
  Intent intent=null;
  ParsedReaderResultType type=result.getType();
  if (type.equals(ParsedReaderResultType.ADDRESSBOOK)) {
    AddressBookDoCoMoParsedResult addressResult=(AddressBookDoCoMoParsedResult)result;
    intent=new Intent(Contacts.Intents.Insert.ACTION,Contacts.People.CONTENT_URI);
    putExtra(intent,Contacts.Intents.Insert.NAME,addressResult.getName());
    putExtra(intent,Contacts.Intents.Insert.PHONE,addressResult.getPhoneNumbers());
    putExtra(intent,Contacts.Intents.Insert.EMAIL,addressResult.getEmail());
    putExtra(intent,Contacts.Intents.Insert.NOTES,addressResult.getNote());
    putExtra(intent,Contacts.Intents.Insert.POSTAL,addressResult.getAddress());
  }
 else   if (type.equals(ParsedReaderResultType.ADDRESSBOOK_AU)) {
    AddressBookAUParsedResult addressResult=(AddressBookAUParsedResult)result;
    intent=new Intent(Contacts.Intents.Insert.ACTION,Contacts.People.CONTENT_URI);
    putExtra(intent,Contacts.Intents.Insert.NAME,addressResult.getNames());
    putExtra(intent,Contacts.Intents.Insert.PHONE,addressResult.getPhoneNumbers());
    putExtra(intent,Contacts.Intents.Insert.EMAIL,addressResult.getEmails());
    putExtra(intent,Contacts.Intents.Insert.NOTES,addressResult.getNote());
    putExtra(intent,Contacts.Intents.Insert.POSTAL,addressResult.getAddress());
  }
 else   if (type.equals(ParsedReaderResultType.BOOKMARK)) {
    try {
      intent=new Intent(Intent.VIEW_ACTION,new ContentURI(((BookmarkDoCoMoParsedResult)result).getURI()));
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.URLTO)) {
    try {
      intent=new Intent(Intent.VIEW_ACTION,new ContentURI(((URLTOParsedResult)result).getURI()));
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.EMAIL)) {
    EmailDoCoMoParsedResult emailResult=(EmailDoCoMoParsedResult)result;
    try {
      intent=new Intent(Intent.SENDTO_ACTION,new ContentURI(emailResult.getTo()));
    }
 catch (    URISyntaxException e) {
    }
    putExtra(intent,"subject",emailResult.getSubject());
    putExtra(intent,"body",emailResult.getBody());
  }
 else   if (type.equals(ParsedReaderResultType.EMAIL_ADDRESS)) {
    EmailAddressParsedResult emailResult=(EmailAddressParsedResult)result;
    try {
      intent=new Intent(Intent.SENDTO_ACTION,new ContentURI("mailto:" + emailResult.getEmailAddress()));
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.TEL)) {
    TelParsedResult telResult=(TelParsedResult)result;
    try {
      intent=new Intent(Intent.DIAL_ACTION,new ContentURI("tel:" + telResult.getNumber()));
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.GEO)) {
    GeoParsedResult geoResult=(GeoParsedResult)result;
    try {
      ContentURI geoURI=new ContentURI("geo:" + geoResult.getGeoURI());
      Log.v(TAG,"Created geo URI: " + geoURI.toString());
      intent=new Intent(Intent.VIEW_ACTION,geoURI);
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.UPC)) {
    UPCParsedResult upcResult=(UPCParsedResult)result;
    try {
      ContentURI uri=new ContentURI("http://www.upcdatabase.com/item.asp?upc=" + upcResult.getUPC());
      intent=new Intent(Intent.VIEW_ACTION,uri);
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.URI)) {
    URIParsedResult uriResult=(URIParsedResult)result;
    try {
      intent=new Intent(Intent.VIEW_ACTION,new ContentURI(uriResult.getURI()));
    }
 catch (    URISyntaxException e) {
    }
  }
 else   if (type.equals(ParsedReaderResultType.ANDROID_INTENT)) {
    intent=((AndroidIntentParsedResult)result).getIntent();
  }
  return intent;
}
