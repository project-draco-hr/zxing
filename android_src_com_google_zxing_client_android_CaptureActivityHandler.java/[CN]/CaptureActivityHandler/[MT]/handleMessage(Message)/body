{
switch (message.what) {
case R.id.auto_focus:
    if (state == State.PREVIEW) {
      CameraManager.get().requestAutoFocus(this,R.id.auto_focus);
    }
  break;
case R.id.restart_preview:
restartPreviewAndDecode();
break;
case R.id.decode_succeeded:
state=State.SUCCESS;
Bundle bundle=message.getData();
Bitmap barcode=bundle == null ? null : (Bitmap)bundle.getParcelable(DecodeThread.BARCODE_BITMAP);
activity.handleDecode((Result)message.obj,barcode);
break;
case R.id.decode_failed:
state=State.PREVIEW;
CameraManager.get().requestPreviewFrame(decodeThread.getHandler(),R.id.decode);
break;
case R.id.return_scan_result:
activity.setResult(Activity.RESULT_OK,(Intent)message.obj);
activity.finish();
break;
case R.id.launch_product_query:
String url=(String)message.obj;
Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse(url));
intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
activity.startActivity(intent);
break;
}
}
