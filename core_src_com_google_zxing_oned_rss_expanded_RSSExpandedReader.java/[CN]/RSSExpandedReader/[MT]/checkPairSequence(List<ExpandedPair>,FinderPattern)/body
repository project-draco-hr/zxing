{
  int currentSequenceLength=previousPairs.size() + 1;
  if (currentSequenceLength > this.currentSequence.length) {
    throw NotFoundException.getNotFoundInstance();
  }
  for (int pos=0; pos < previousPairs.size(); ++pos) {
    this.currentSequence[pos]=previousPairs.get(pos).getFinderPattern().getValue();
  }
  this.currentSequence[currentSequenceLength - 1]=pattern.getValue();
  for (  int[] validSequence : FINDER_PATTERN_SEQUENCES) {
    if (validSequence.length >= currentSequenceLength) {
      boolean valid=true;
      for (int pos=0; pos < currentSequenceLength; ++pos) {
        if (this.currentSequence[pos] != validSequence[pos]) {
          valid=false;
          break;
        }
      }
      if (valid) {
        return currentSequenceLength == validSequence.length;
      }
    }
  }
  throw NotFoundException.getNotFoundInstance();
}
