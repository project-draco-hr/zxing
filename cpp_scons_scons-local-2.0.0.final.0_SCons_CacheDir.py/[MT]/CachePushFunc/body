def CachePushFunc(target, source, env):
    t = target[0]
    if t.nocache:
        return
    fs = t.fs
    cd = env.get_CacheDir()
    (cachedir, cachefile) = cd.cachepath(t)
    if fs.exists(cachefile):
        cd.CacheDebug('CachePush(%s):  %s already exists in cache\n', t, cachefile)
        return
    cd.CacheDebug('CachePush(%s):  pushing to %s\n', t, cachefile)
    tempfile = ((cachefile + '.tmp') + str(os.getpid()))
    errfmt = 'Unable to copy %s to cache. Cache file is %s'
    if (not fs.isdir(cachedir)):
        try:
            fs.makedirs(cachedir)
        except EnvironmentError:
            if (not fs.isdir(cachedir)):
                msg = (errfmt % (str(target), cachefile))
                raise SCons.Errors.EnvironmentError(msg)
    try:
        if fs.islink(t.path):
            fs.symlink(fs.readlink(t.path), tempfile)
        else:
            fs.copy2(t.path, tempfile)
        fs.rename(tempfile, cachefile)
        st = fs.stat(t.path)
        fs.chmod(cachefile, (stat.S_IMODE(st[stat.ST_MODE]) | stat.S_IWRITE))
    except EnvironmentError:
        msg = (errfmt % (str(target), cachefile))
        SCons.Warnings.warn(SCons.Warnings.CacheWriteErrorWarning, msg)
