{
  int numPenalties=0;
  byte[][] array=matrix.getArray();
  int width=matrix.getWidth();
  int height=matrix.getHeight();
  for (int y=0; y < height; y++) {
    for (int x=0; x < width; x++) {
      byte[] arrayY=array[y];
      if (x + 6 < width && (x == 0 || arrayY[x - 1] == 0) && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (x + 7 >= width || arrayY[x + 7] == 0) && ((x + 10 < width && arrayY[x + 7] == 0 && arrayY[x + 8] == 0 && arrayY[x + 9] == 0 && arrayY[x + 10] == 0) || (x - 4 >= 0 && arrayY[x - 1] == 0 && arrayY[x - 2] == 0 && arrayY[x - 3] == 0 && arrayY[x - 4] == 0))) {
        numPenalties++;
      }
      if (y + 6 < height && (y == 0 || array[y - 1][x] == 0) && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (y + 7 >= height || array[y + 7][x] == 0) && ((y + 10 < height && array[y + 7][x] == 0 && array[y + 8][x] == 0 && array[y + 9][x] == 0 && array[y + 10][x] == 0) || (y - 4 >= 0 && array[y - 1][x] == 0 && array[y - 2][x] == 0 && array[y - 3][x] == 0 && array[y - 4][x] == 0))) {
        numPenalties++;
      }
    }
  }
  return numPenalties * N3;
}
