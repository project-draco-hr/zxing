def midl_emitter(target, source, env):
    'Produces a list of outputs from the MIDL compiler'
    (base, ext) = SCons.Util.splitext(str(target[0]))
    tlb = target[0]
    incl = (base + '.h')
    interface = (base + '_i.c')
    t = [tlb, incl, interface]
    midlcom = env['MIDLCOM']
    if (midlcom.find('/proxy') != (-1)):
        proxy = (base + '_p.c')
        t.append(proxy)
    if (midlcom.find('/dlldata') != (-1)):
        dlldata = (base + '_data.c')
        t.append(dlldata)
    return (t, source)
