def get_intel_compiler_top(version, abi):
    '\n    Return the main path to the top-level dir of the Intel compiler,\n    using the given version.\n    The compiler will be in <top>/bin/icl.exe (icc on linux),\n    the include dir is <top>/include, etc.\n    '
    if is_windows:
        if (not SCons.Util.can_read_reg):
            raise NoRegistryModuleError('No Windows registry module was found')
        top = get_intel_registry_value('ProductDir', version, abi)
        if ((not os.path.exists(os.path.join(top, 'Bin', 'icl.exe'))) and (not os.path.exists(os.path.join(top, 'Bin', abi, 'icl.exe')))):
            raise MissingDirError(("Can't find Intel compiler in %s" % top))
    elif (is_mac or is_linux):
        dirs = ('/opt/intel/cc/%s', '/opt/intel_cc_%s')
        if (abi == 'x86_64'):
            dirs = ('/opt/intel/cce/%s',)
        top = None
        for d in dirs:
            if os.path.exists(os.path.join((d % version), 'bin', 'icc')):
                top = (d % version)
                break
        if (not top):
            raise MissingDirError(("Can't find version %s Intel compiler in %s (abi='%s')" % (version, top, abi)))
    return top
