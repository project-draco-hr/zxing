def AddMethod(obj, function, name=None):
    '\n    Adds either a bound method to an instance or an unbound method to\n    a class. If name is ommited the name of the specified function\n    is used by default.\n    Example:\n      a = A()\n      def f(self, x, y):\n        self.z = x + y\n      AddMethod(f, A, "add")\n      a.add(2, 4)\n      print a.z\n      AddMethod(lambda self, i: self.l[i], a, "listIndex")\n      print a.listIndex(5)\n    '
    if (name is None):
        name = function.func_name
    else:
        function = RenameFunction(function, name)
    if (hasattr(obj, '__class__') and (obj.__class__ is not type)):
        setattr(obj, name, MethodType(function, obj, obj.__class__))
    else:
        setattr(obj, name, MethodType(function, None, obj))
