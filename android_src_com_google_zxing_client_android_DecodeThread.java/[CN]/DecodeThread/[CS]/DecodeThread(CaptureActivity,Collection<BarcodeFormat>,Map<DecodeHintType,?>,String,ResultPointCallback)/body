{
  this.activity=activity;
  handlerInitLatch=new CountDownLatch(1);
  hints=new EnumMap<>(DecodeHintType.class);
  if (baseHints != null) {
    hints.putAll(baseHints);
  }
  if (decodeFormats == null || decodeFormats.isEmpty()) {
    SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(activity);
    decodeFormats=EnumSet.noneOf(BarcodeFormat.class);
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D_PRODUCT,false)) {
      decodeFormats.addAll(DecodeFormatManager.PRODUCT_FORMATS);
    }
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_1D_INDUSTRIAL,false)) {
      decodeFormats.addAll(DecodeFormatManager.INDUSTRIAL_FORMATS);
    }
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_QR,false)) {
      decodeFormats.addAll(DecodeFormatManager.QR_CODE_FORMATS);
    }
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_DATA_MATRIX,false)) {
      decodeFormats.addAll(DecodeFormatManager.DATA_MATRIX_FORMATS);
    }
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_AZTEC,false)) {
      decodeFormats.addAll(DecodeFormatManager.AZTEC_FORMATS);
    }
    if (prefs.getBoolean(PreferencesActivity.KEY_DECODE_PDF417,false)) {
      decodeFormats.addAll(DecodeFormatManager.PDF417_FORMATS);
    }
  }
  hints.put(DecodeHintType.POSSIBLE_FORMATS,decodeFormats);
  if (characterSet != null) {
    hints.put(DecodeHintType.CHARACTER_SET,characterSet);
  }
  hints.put(DecodeHintType.NEED_RESULT_POINT_CALLBACK,resultPointCallback);
  Log.i("DecodeThread","Hints: " + hints);
}
