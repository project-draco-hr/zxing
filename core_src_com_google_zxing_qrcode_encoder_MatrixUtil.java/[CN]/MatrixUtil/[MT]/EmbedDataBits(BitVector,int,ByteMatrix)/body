{
  int bit_index=0;
  int direction=-1;
  int x=matrix.width() - 1;
  int y=matrix.height() - 1;
  while (x > 0) {
    if (x == 6) {
      x-=1;
    }
    while (y >= 0 && y < matrix.height()) {
      for (int i=0; i < 2; ++i) {
        final int xx=x - i;
        if (!IsEmpty(matrix.get(y,xx))) {
          continue;
        }
        int bit;
        if (bit_index < data_bits.size()) {
          bit=data_bits.at(bit_index);
          ++bit_index;
        }
 else {
          bit=0;
        }
        if (mask_pattern != -1) {
          final int mask=MaskUtil.GetDataMaskBit(mask_pattern,xx,y);
          bit^=mask;
        }
        matrix.set(y,xx,bit);
      }
      y+=direction;
    }
    direction=-direction;
    y+=direction;
    x-=2;
  }
  if (bit_index != data_bits.size()) {
    throw new WriterException("Not all bits consumed: " + bit_index + "/"+ data_bits.size());
  }
}
