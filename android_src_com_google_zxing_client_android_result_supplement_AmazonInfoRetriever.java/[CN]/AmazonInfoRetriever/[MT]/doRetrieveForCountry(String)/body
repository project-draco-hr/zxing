{
  CharSequence contents=HttpHelper.downloadViaHttp("https://bsplus.srowen.com/ss?c=" + theCountry + "&t="+ type+ "&i="+ productID,HttpHelper.ContentType.XML);
  String detailPageURL=null;
  Collection<String> authors=new ArrayList<String>();
  String title=null;
  String formattedNewPrice=null;
  String formattedUsedPrice=null;
  boolean error=false;
  try {
    XmlPullParser xpp=buildParser(contents);
    boolean seenItem=false;
    boolean seenLowestNewPrice=false;
    boolean seenLowestUsedPrice=false;
    for (int eventType=xpp.getEventType(); eventType != XmlPullParser.END_DOCUMENT; eventType=xpp.next()) {
      if (eventType == XmlPullParser.START_TAG) {
        String name=xpp.getName();
        if ("Item".equals(name)) {
          if (seenItem) {
            break;
          }
 else {
            seenItem=true;
          }
        }
 else         if ("DetailPageURL".equals(name)) {
          assertTextNext(xpp);
          detailPageURL=xpp.getText();
        }
 else         if ("Author".equals(name)) {
          assertTextNext(xpp);
          authors.add(xpp.getText());
        }
 else         if ("Title".equals(name)) {
          assertTextNext(xpp);
          title=xpp.getText();
        }
 else         if ("LowestNewPrice".equals(name)) {
          seenLowestNewPrice=true;
          seenLowestUsedPrice=false;
        }
 else         if ("LowestUsedPrice".equals(name)) {
          seenLowestNewPrice=false;
          seenLowestUsedPrice=true;
        }
 else         if ("FormattedPrice".equals(name)) {
          if (seenLowestNewPrice || seenLowestUsedPrice) {
            assertTextNext(xpp);
            String theText=xpp.getText();
            if (seenLowestNewPrice) {
              formattedNewPrice=theText;
            }
 else {
              formattedUsedPrice=theText;
            }
            seenLowestNewPrice=false;
            seenLowestUsedPrice=false;
          }
        }
 else         if ("Errors".equals(name)) {
          error=true;
          break;
        }
      }
    }
  }
 catch (  XmlPullParserException xppe) {
    throw new IOException(xppe);
  }
  if (error || detailPageURL == null) {
    return;
  }
  Collection<String> newTexts=new ArrayList<String>();
  maybeAddText(title,newTexts);
  maybeAddTextSeries(authors,newTexts);
  if (formattedNewPrice != null) {
    maybeAddText(formattedNewPrice,newTexts);
  }
 else   if (formattedUsedPrice != null) {
    maybeAddText(formattedUsedPrice,newTexts);
  }
  append(productID,"Amazon " + theCountry,newTexts.toArray(new String[newTexts.size()]),detailPageURL);
}
