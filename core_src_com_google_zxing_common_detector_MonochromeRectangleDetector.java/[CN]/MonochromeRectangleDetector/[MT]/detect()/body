{
  if (!BlackPointEstimationMethod.TWO_D_SAMPLING.equals(image.getLastEstimationMethod())) {
    image.estimateBlackPoint(BlackPointEstimationMethod.TWO_D_SAMPLING,0);
  }
  int height=image.getHeight();
  int width=image.getWidth();
  int halfHeight=height >> 1;
  int halfWidth=width >> 1;
  int iSkip=Math.max(1,height / (MAX_MODULES << 3));
  int jSkip=Math.max(1,width / (MAX_MODULES << 3));
  int minI=0;
  int maxI=height;
  int minJ=0;
  int maxJ=width;
  ResultPoint pointA=findCornerFromCenter(halfHeight,-iSkip,minI,maxI,halfWidth,0,minJ,maxJ,halfWidth >> 1);
  minI=(int)pointA.getY() - 1;
  ResultPoint pointB=findCornerFromCenter(halfHeight,0,minI,maxI,halfWidth,-jSkip,minJ,maxJ,halfHeight >> 1);
  minJ=(int)pointB.getX() - 1;
  ResultPoint pointC=findCornerFromCenter(halfHeight,0,minI,maxI,halfWidth,jSkip,minJ,maxJ,halfHeight >> 1);
  maxJ=(int)pointC.getX() + 1;
  ResultPoint pointD=findCornerFromCenter(halfHeight,iSkip,minI,maxI,halfWidth,0,minJ,maxJ,halfWidth >> 1);
  maxI=(int)pointD.getY() + 1;
  pointA=findCornerFromCenter(halfHeight,-iSkip,minI,maxI,halfWidth,0,minJ,maxJ,halfWidth >> 2);
  return new ResultPoint[]{pointA,pointB,pointC,pointD};
}
