{
  int[] startGuardPattern=UPCEANReader.findStartGuardPattern(row);
  int size=readers.size();
  for (int i=0; i < size; i++) {
    UPCEANReader reader=(UPCEANReader)readers.elementAt(i);
    Result result;
    try {
      result=reader.decodeRow(rowNumber,row,startGuardPattern,hints);
    }
 catch (    ReaderException re) {
      continue;
    }
    boolean ean13MayBeUPCA=BarcodeFormat.EAN_13.equals(result.getBarcodeFormat()) && result.getText().charAt(0) == '0';
    Vector possibleFormats=hints == null ? null : (Vector)hints.get(DecodeHintType.POSSIBLE_FORMATS);
    boolean canReturnUPCA=possibleFormats == null || possibleFormats.contains(BarcodeFormat.UPC_A);
    if (ean13MayBeUPCA && canReturnUPCA) {
      return new Result(result.getText().substring(1),null,result.getResultPoints(),BarcodeFormat.UPC_A);
    }
    return result;
  }
  throw NotFoundException.getNotFoundInstance();
}
