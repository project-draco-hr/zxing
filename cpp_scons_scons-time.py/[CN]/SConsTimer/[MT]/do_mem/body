def do_mem(self, argv):
    format = 'ascii'
    logfile_path = (lambda x: x)
    stage = self.default_stage
    tail = None
    short_opts = '?C:f:hp:t:'
    long_opts = ['chdir=', 'file=', 'fmt=', 'format=', 'help', 'prefix=', 'stage=', 'tail=', 'title=']
    (opts, args) = getopt.getopt(argv[1:], short_opts, long_opts)
    for (o, a) in opts:
        if (o in ('-C', '--chdir')):
            self.chdir = a
        elif (o in ('-f', '--file')):
            self.config_file = a
        elif (o in ('--fmt', '--format')):
            format = a
        elif (o in ('-?', '-h', '--help')):
            self.do_help(['help', 'mem'])
            sys.exit(0)
        elif (o in ('-p', '--prefix')):
            self.prefix = a
        elif (o in ('--stage',)):
            if (not (a in self.stages)):
                sys.stderr.write(('%s: mem: Unrecognized stage "%s".\n' % (self.name, a)))
                sys.exit(1)
            stage = a
        elif (o in ('-t', '--tail')):
            tail = int(a)
        elif (o in ('--title',)):
            self.title = a
    if self.config_file:
        HACK_for_exec(open(self.config_file, 'rU').read(), self.__dict__)
    if self.chdir:
        os.chdir(self.chdir)
        logfile_path = (lambda x: os.path.join(self.chdir, x))
    if (not args):
        pattern = ('%s*.log' % self.prefix)
        args = self.args_to_files([pattern], tail)
        if (not args):
            if self.chdir:
                directory = self.chdir
            else:
                directory = os.getcwd()
            sys.stderr.write(('%s: mem: No arguments specified.\n' % self.name))
            sys.stderr.write(('%s  No %s*.log files found in "%s".\n' % (self.name_spaces, self.prefix, directory)))
            sys.stderr.write(('%s  Type "%s help mem" for help.\n' % (self.name_spaces, self.name)))
            sys.exit(1)
    else:
        args = self.args_to_files(args, tail)
    cwd_ = (os.getcwd() + os.sep)
    if (format == 'ascii'):
        self.ascii_table(args, tuple(self.stages), self.get_memory, logfile_path)
    elif (format == 'gnuplot'):
        results = self.collect_results(args, self.get_memory, self.stage_strings[stage])
        self.gnuplot_results(results)
    else:
        sys.stderr.write(('%s: mem: Unknown format "%s".\n' % (self.name, format)))
        sys.exit(1)
    return 0
