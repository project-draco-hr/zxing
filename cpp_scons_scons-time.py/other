from __future__ import division
from __future__ import nested_scopes
__revision__ = 'src/script/scons-time.py 5023 2010/06/14 22:05:46 scons'
import getopt
import glob
import os
import re
import shutil
import sys
import tempfile
import time
try:
    sorted
except NameError:

    def sorted(iterable, cmp=None, key=None, reverse=False):
        if (key is not None):
            result = [(key(x), x) for x in iterable]
        else:
            result = iterable[:]
        if (cmp is None):
            result.sort()
        else:
            result.sort(cmp)
        if (key is not None):
            result = [t1 for (t0, t1) in result]
        if reverse:
            result.reverse()
        return result
if (os.environ.get('SCONS_HORRIBLE_REGRESSION_TEST_HACK') is not None):
    from types import ClassType

    def callable(obj):
        if hasattr(obj, '__call__'):
            return True
        if isinstance(obj, (ClassType, type)):
            return True
        return False
if (__name__ == '__main__'):
    (opts, args) = getopt.getopt(sys.argv[1:], 'h?V', ['help', 'version'])
    ST = SConsTimer()
    for (o, a) in opts:
        if (o in ('-?', '-h', '--help')):
            ST.do_help(['help'])
            sys.exit(0)
        elif (o in ('-V', '--version')):
            sys.stdout.write('scons-time version\n')
            sys.exit(0)
    if (not args):
        sys.stderr.write(('Type "%s help" for usage.\n' % ST.name))
        sys.exit(1)
    ST.execute_subcommand(args)
