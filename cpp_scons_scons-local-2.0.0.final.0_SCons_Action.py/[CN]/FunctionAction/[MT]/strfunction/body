def strfunction(self, target, source, env, executor=None):
    if (self.cmdstr is None):
        return None
    if (self.cmdstr is not _null):
        from SCons.Subst import SUBST_RAW
        if executor:
            c = env.subst(self.cmdstr, SUBST_RAW, executor=executor)
        else:
            c = env.subst(self.cmdstr, SUBST_RAW, target, source)
        if c:
            return c

    def array(a):

        def quote(s):
            try:
                str_for_display = s.str_for_display
            except AttributeError:
                s = repr(s)
            else:
                s = str_for_display()
            return s
        return (('[' + ', '.join(map(quote, a))) + ']')
    try:
        strfunc = self.execfunction.strfunction
    except AttributeError:
        pass
    else:
        if (strfunc is None):
            return None
        if callable(strfunc):
            return strfunc(target, source, env)
    name = self.function_name()
    tstr = array(target)
    sstr = array(source)
    return ('%s(%s, %s)' % (name, tstr, sstr))
