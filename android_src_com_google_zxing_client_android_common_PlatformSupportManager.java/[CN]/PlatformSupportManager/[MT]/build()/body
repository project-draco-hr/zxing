{
  for (  Integer minVersion : implementations.keySet()) {
    if (Build.VERSION.SDK_INT >= minVersion) {
      String className=implementations.get(minVersion);
      try {
        Class<? extends T> clazz=Class.forName(className).asSubclass(managedInterface);
        Log.i(TAG,"Using implementation " + clazz + " of "+ managedInterface+ " for SDK "+ minVersion);
        return clazz.getConstructor().newInstance();
      }
 catch (      ClassNotFoundException cnfe) {
        Log.w(TAG,cnfe);
      }
catch (      IllegalAccessException iae) {
        Log.w(TAG,iae);
      }
catch (      InstantiationException ie) {
        Log.w(TAG,ie);
      }
catch (      NoSuchMethodException nsme) {
        Log.w(TAG,nsme);
      }
catch (      InvocationTargetException ite) {
        Log.w(TAG,ite);
      }
    }
  }
  Log.i(TAG,"Using default implementation " + defaultImplementation.getClass() + " of "+ managedInterface);
  return defaultImplementation;
}
