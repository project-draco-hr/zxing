{
  int twoCenterLayers=2 * nbCenterLayers;
  boolean[] resab=sampleLine(bullsEyeCorners[0],bullsEyeCorners[1],twoCenterLayers + 1);
  boolean[] resbc=sampleLine(bullsEyeCorners[1],bullsEyeCorners[2],twoCenterLayers + 1);
  boolean[] rescd=sampleLine(bullsEyeCorners[2],bullsEyeCorners[3],twoCenterLayers + 1);
  boolean[] resda=sampleLine(bullsEyeCorners[3],bullsEyeCorners[0],twoCenterLayers + 1);
  if (resab[0] && resab[twoCenterLayers]) {
    shift=0;
  }
 else   if (resbc[0] && resbc[twoCenterLayers]) {
    shift=1;
  }
 else   if (rescd[0] && rescd[twoCenterLayers]) {
    shift=2;
  }
 else   if (resda[0] && resda[twoCenterLayers]) {
    shift=3;
  }
 else {
    throw NotFoundException.getNotFoundInstance();
  }
  boolean[] parameterData;
  boolean[] shiftedParameterData;
  if (compact) {
    shiftedParameterData=new boolean[28];
    for (int i=0; i < 7; i++) {
      shiftedParameterData[i]=resab[2 + i];
      shiftedParameterData[i + 7]=resbc[2 + i];
      shiftedParameterData[i + 14]=rescd[2 + i];
      shiftedParameterData[i + 21]=resda[2 + i];
    }
    parameterData=new boolean[28];
    for (int i=0; i < 28; i++) {
      parameterData[i]=shiftedParameterData[(i + shift * 7) % 28];
    }
  }
 else {
    shiftedParameterData=new boolean[40];
    for (int i=0; i < 11; i++) {
      if (i < 5) {
        shiftedParameterData[i]=resab[2 + i];
        shiftedParameterData[i + 10]=resbc[2 + i];
        shiftedParameterData[i + 20]=rescd[2 + i];
        shiftedParameterData[i + 30]=resda[2 + i];
      }
      if (i > 5) {
        shiftedParameterData[i - 1]=resab[2 + i];
        shiftedParameterData[i + 9]=resbc[2 + i];
        shiftedParameterData[i + 19]=rescd[2 + i];
        shiftedParameterData[i + 29]=resda[2 + i];
      }
    }
    parameterData=new boolean[40];
    for (int i=0; i < 40; i++) {
      parameterData[i]=shiftedParameterData[(i + shift * 10) % 40];
    }
  }
  correctParameterData(parameterData,compact);
  getParameters(parameterData);
}
