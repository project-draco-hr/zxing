'SCons.Variables.PathVariable\n\nThis file defines an option type for SCons implementing path settings.\n\nTo be used whenever a a user-specified path override should be allowed.\n\nArguments to PathVariable are:\n  option-name  = name of this option on the command line (e.g. "prefix")\n  option-help  = help string for option\n  option-dflt  = default value for this option\n  validator    = [optional] validator for option value.  Predefined\n                 validators are:\n\n                     PathAccept -- accepts any path setting; no validation\n                     PathIsDir  -- path must be an existing directory\n                     PathIsDirCreate -- path must be a dir; will create\n                     PathIsFile -- path must be a file\n                     PathExists -- path must exist (any type) [default]\n\n                 The validator is a function that is called and which\n                 should return True or False to indicate if the path\n                 is valid.  The arguments to the validator function\n                 are: (key, val, env).  The key is the name of the\n                 option, the val is the path specified for the option,\n                 and the env is the env to which the Otions have been\n                 added.\n\nUsage example:\n\n  Examples:\n      prefix=/usr/local\n\n  opts = Variables()\n\n  opts = Variables()\n  opts.Add(PathVariable(\'qtdir\',\n                      \'where the root of Qt is installed\',\n                      qtdir, PathIsDir))\n  opts.Add(PathVariable(\'qt_includes\',\n                      \'where the Qt includes are installed\',\n                      \'$qtdir/includes\', PathIsDirCreate))\n  opts.Add(PathVariable(\'qt_libraries\',\n                      \'where the Qt library is installed\',\n                      \'$qtdir/lib\'))\n\n'
__revision__ = 'src/engine/SCons/Variables/PathVariable.py 5023 2010/06/14 22:05:46 scons'
__all__ = ['PathVariable']
import os
import os.path
import SCons.Errors
PathVariable = _PathVariableClass()
