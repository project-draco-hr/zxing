{
  int numCounters=counters.length;
  int total=0;
  int patternLength=0;
  for (int i=0; i < numCounters; i++) {
    total+=counters[i];
    patternLength+=pattern[i];
  }
  if (total < patternLength) {
    return Integer.MAX_VALUE;
  }
  int unitBarWidth=(total << INTEGER_MATH_SHIFT) / patternLength;
  maxIndividualVariance*=unitBarWidth;
  int totalVariance=0;
  for (int x=0; x < numCounters; x++) {
    int counter=counters[x] << INTEGER_MATH_SHIFT;
    int scaledPattern=pattern[x] * unitBarWidth;
    int variance=counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;
    if (variance > maxIndividualVariance) {
      return Integer.MAX_VALUE;
    }
    totalVariance+=variance;
  }
  return totalVariance / total;
}
