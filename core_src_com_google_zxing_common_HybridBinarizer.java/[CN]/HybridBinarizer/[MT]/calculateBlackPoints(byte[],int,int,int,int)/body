{
  int[][] blackPoints=new int[subHeight][subWidth];
  for (int y=0; y < subHeight; y++) {
    int yoffset=y << BLOCK_SIZE_POWER;
    if ((yoffset + BLOCK_SIZE) >= height) {
      yoffset=height - BLOCK_SIZE;
    }
    for (int x=0; x < subWidth; x++) {
      int xoffset=x << BLOCK_SIZE_POWER;
      if ((xoffset + BLOCK_SIZE) >= width) {
        xoffset=width - BLOCK_SIZE;
      }
      int sum=0;
      int min=0xFF;
      int max=0;
      for (int yy=0, offset=yoffset * width + xoffset; yy < BLOCK_SIZE; yy++, offset+=width) {
        for (int xx=0; xx < BLOCK_SIZE; xx++) {
          int pixel=luminances[offset + xx] & 0xFF;
          sum+=pixel;
          if (pixel < min) {
            min=pixel;
          }
          if (pixel > max) {
            max=pixel;
          }
        }
      }
      int average=sum >> 6;
      if (max - min <= 24) {
        average=min >> 1;
        if (y > 0 && x > 0) {
          int bp=getBlackPointFromNeighbors(blackPoints,x,y);
          if (min < bp) {
            average=bp;
          }
        }
      }
      blackPoints[y][x]=average;
    }
  }
  return blackPoints;
}
