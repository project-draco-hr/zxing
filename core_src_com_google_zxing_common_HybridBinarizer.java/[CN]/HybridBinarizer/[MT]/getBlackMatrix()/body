{
  if (matrix != null) {
    return matrix;
  }
  LuminanceSource source=getLuminanceSource();
  if (source.getWidth() >= MINIMUM_DIMENSION && source.getHeight() >= MINIMUM_DIMENSION) {
    byte[] luminances=source.getMatrix();
    int width=source.getWidth();
    int height=source.getHeight();
    int subWidth=width >> BLOCK_SIZE_POWER;
    if ((width & BLOCK_SIZE_MASK) != 0) {
      subWidth++;
    }
    int subHeight=height >> BLOCK_SIZE_POWER;
    if ((height & BLOCK_SIZE_MASK) != 0) {
      subHeight++;
    }
    int[][] blackPoints=calculateBlackPoints(luminances,subWidth,subHeight,width,height);
    BitMatrix newMatrix=new BitMatrix(width,height);
    calculateThresholdForBlock(luminances,subWidth,subHeight,width,height,blackPoints,newMatrix);
    matrix=newMatrix;
  }
 else {
    matrix=super.getBlackMatrix();
  }
  return matrix;
}
