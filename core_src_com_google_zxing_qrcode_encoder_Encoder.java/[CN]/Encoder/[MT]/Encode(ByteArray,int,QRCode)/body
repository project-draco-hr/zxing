{
  final int mode=ChooseMode(bytes);
  BitVector data_bits=new BitVector();
  AppendBytes(bytes,mode,data_bits);
  final int num_input_bytes=data_bits.sizeInBytes();
  InitQRCode(num_input_bytes,ec_level,mode,qr_code);
  BitVector header_and_data_bits=new BitVector();
  AppendModeInfo(qr_code.mode(),header_and_data_bits);
  AppendLengthInfo(bytes.size(),qr_code.version(),qr_code.mode(),header_and_data_bits);
  header_and_data_bits.appendBitVector(data_bits);
  TerminateBits(qr_code.num_data_bytes(),header_and_data_bits);
  BitVector final_bits=new BitVector();
  InterleaveWithECBytes(header_and_data_bits,qr_code.num_total_bytes(),qr_code.num_data_bytes(),qr_code.num_rs_blocks(),final_bits);
  ByteMatrix matrix=new ByteMatrix(qr_code.matrix_width(),qr_code.matrix_width());
  qr_code.set_mask_pattern(ChooseMaskPattern(final_bits,qr_code.ec_level(),qr_code.version(),matrix));
  MatrixUtil.BuildMatrix(final_bits,qr_code.ec_level(),qr_code.version(),qr_code.mask_pattern(),matrix);
  qr_code.set_matrix(matrix);
  if (!qr_code.IsValid()) {
    throw new WriterException("Invalid QR code: " + qr_code.toString());
  }
}
