{
  if (bytes.size() % 2 != 0) {
    return false;
  }
  for (int i=0; i < bytes.size(); i+=2) {
    Debug.DCHECK(IsValidKanji(bytes.at(i),bytes.at(i + 1)));
    final int code=(bytes.at(i) << 8) | bytes.at(i + 1);
    int subtracted=-1;
    if (code >= 0x8140 && code <= 0x9ffc) {
      subtracted=code - 0x8140;
    }
 else     if (code >= 0xe040 && code <= 0xebbf) {
      subtracted=code - 0xc140;
    }
    if (subtracted == -1) {
      Debug.LOG_ERROR("Invalid byte sequence: " + bytes);
      return false;
    }
    final int encoded=((subtracted >> 8) * 0xc0) + (subtracted & 0xff);
    bits.AppendBits(encoded,13);
  }
  return true;
}
