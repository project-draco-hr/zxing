def _fortranEmitter(target, source, env):
    node = source[0].rfile()
    if ((not node.exists()) and (not node.is_derived())):
        print ('Could not locate ' + str(node.name))
        return ([], [])
    mod_regex = '(?i)^\\s*MODULE\\s+(?!PROCEDURE)(\\w+)'
    cre = re.compile(mod_regex, re.M)
    modules = cre.findall(node.get_text_contents())
    modules = SCons.Util.unique(modules)
    suffix = env.subst('$FORTRANMODSUFFIX', target=target, source=source)
    moddir = env.subst('$FORTRANMODDIR', target=target, source=source)
    modules = [(x.lower() + suffix) for x in modules]
    for m in modules:
        target.append(env.fs.File(m, moddir))
    return (target, source)
