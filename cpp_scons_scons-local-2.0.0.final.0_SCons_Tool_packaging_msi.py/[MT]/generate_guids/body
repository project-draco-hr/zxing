def generate_guids(root):
    ' generates globally unique identifiers for parts of the xml which need\n    them.\n\n    Component tags have a special requirement. Their UUID is only allowed to\n    change if the list of their contained resources has changed. This allows\n    for clean removal and proper updates.\n\n    To handle this requirement, the uuid is generated with an md5 hashing the\n    whole subtree of a xml node.\n    '
    from hashlib import md5
    needs_id = {'Product': 'Id', 'Package': 'Id', 'Component': 'Guid', }
    for (key, value) in needs_id.items():
        node_list = root.getElementsByTagName(key)
        attribute = value
        for node in node_list:
            hash = md5(node.toxml()).hexdigest()
            hash_str = ('%s-%s-%s-%s-%s' % (hash[:8], hash[8:12], hash[12:16], hash[16:20], hash[20:]))
            node.attributes[attribute] = hash_str
