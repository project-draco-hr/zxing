{
  BufferedImage rotatedImage=rotateImage(image,rotationInDegrees);
  MonochromeBitmapSource source=new BufferedImageMonochromeBitmapSource(rotatedImage);
  Result result;
  try {
    result=barcodeReader.decode(source);
  }
 catch (  ReaderException re) {
    System.out.println(re);
    return false;
  }
  if (expectedFormat != result.getBarcodeFormat()) {
    System.out.println("Format mismatch: expected '" + expectedFormat + "' but got '"+ result.getBarcodeFormat()+ "' (rotation: "+ rotationInDegrees+ ")");
    return false;
  }
  String resultText=result.getText();
  if (!expectedText.equals(resultText)) {
    System.out.println("Mismatch: expected '" + expectedText + "' but got '"+ resultText+ "' (rotation: "+ rotationInDegrees+ ")");
    return false;
  }
  try {
    result=barcodeReader.decode(source,TRY_HARDER_HINT);
  }
 catch (  ReaderException re) {
    fail("Normal mode succeeded but \"try harder\" failed");
    return false;
  }
  if (expectedFormat != result.getBarcodeFormat()) {
    System.out.println("Try Harder Format mismatch: expected '" + expectedFormat + "' but got '"+ result.getBarcodeFormat()+ "' (rotation: "+ rotationInDegrees+ ")");
  }
 else   if (!expectedText.equals(resultText)) {
    System.out.println("Try Harder Mismatch: expected '" + expectedText + "' but got '"+ resultText+ "' (rotation: "+ rotationInDegrees+ ")");
  }
  return true;
}
