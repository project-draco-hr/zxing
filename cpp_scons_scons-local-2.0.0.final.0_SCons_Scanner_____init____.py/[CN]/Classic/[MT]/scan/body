def scan(self, node, path=()):
    if (node.includes is not None):
        includes = node.includes
    else:
        includes = self.find_include_names(node)
        node.includes = list(map(SCons.Util.silent_intern, includes))
    nodes = []
    source_dir = node.get_dir()
    if callable(path):
        path = path()
    for include in includes:
        (n, i) = self.find_include(include, source_dir, path)
        if (n is None):
            SCons.Warnings.warn(SCons.Warnings.DependencyWarning, ('No dependency generated for file: %s (included from: %s) -- file not found' % (i, node)))
        else:
            nodes.append((self.sort_key(include), n))
    return [pair[1] for pair in sorted(nodes)]
