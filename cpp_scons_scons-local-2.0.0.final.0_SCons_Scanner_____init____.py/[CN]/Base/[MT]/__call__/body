def __call__(self, node, env, path=()):
    "\n        This method scans a single object. 'node' is the node\n        that will be passed to the scanner function, and 'env' is the\n        environment that will be passed to the scanner function. A list of\n        direct dependency nodes for the specified node will be returned.\n        "
    if (self.scan_check and (not self.scan_check(node, env))):
        return []
    self = self.select(node)
    if (not (self.argument is _null)):
        list = self.function(node, env, path, self.argument)
    else:
        list = self.function(node, env, path)
    kw = {}
    if hasattr(node, 'dir'):
        kw['directory'] = node.dir
    node_factory = env.get_factory(self.node_factory)
    nodes = []
    for l in list:
        if (self.node_class and (not isinstance(l, self.node_class))):
            l = node_factory(l, **kw)
        nodes.append(l)
    return nodes
