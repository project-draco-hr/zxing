{
  StringBuilder sb=new StringBuilder(msg.length());
  if (encoding == null) {
    encoding=DEFAULT_ENCODING;
  }
 else   if (!DEFAULT_ENCODING.equals(encoding)) {
    CharacterSetECI eci=CharacterSetECI.getCharacterSetECIByName(encoding.name());
    if (eci != null) {
      encodingECI(eci.getValue(),sb);
    }
  }
  int len=msg.length();
  int p=0;
  int textSubMode=SUBMODE_ALPHA;
  if (compaction == Compaction.TEXT) {
    encodeText(msg,p,len,sb,textSubMode);
  }
 else   if (compaction == Compaction.BYTE) {
    byte[] bytes=msg.getBytes(encoding);
    encodeBinary(bytes,p,bytes.length,BYTE_COMPACTION,sb);
  }
 else   if (compaction == Compaction.NUMERIC) {
    sb.append((char)LATCH_TO_NUMERIC);
    encodeNumeric(msg,p,len,sb);
  }
 else {
    int encodingMode=TEXT_COMPACTION;
    while (p < len) {
      int n=determineConsecutiveDigitCount(msg,p);
      if (n >= 13) {
        sb.append((char)LATCH_TO_NUMERIC);
        encodingMode=NUMERIC_COMPACTION;
        textSubMode=SUBMODE_ALPHA;
        encodeNumeric(msg,p,n,sb);
        p+=n;
      }
 else {
        int t=determineConsecutiveTextCount(msg,p);
        if (t >= 5 || n == len) {
          if (encodingMode != TEXT_COMPACTION) {
            sb.append((char)LATCH_TO_TEXT);
            encodingMode=TEXT_COMPACTION;
            textSubMode=SUBMODE_ALPHA;
          }
          textSubMode=encodeText(msg,p,t,sb,textSubMode);
          p+=t;
        }
 else {
          int b=determineConsecutiveBinaryCount(msg,p,encoding);
          if (b == 0) {
            b=1;
          }
          byte[] bytes=msg.substring(p,p + b).getBytes(encoding);
          if (bytes.length == 1 && encodingMode == TEXT_COMPACTION) {
            encodeBinary(bytes,0,1,TEXT_COMPACTION,sb);
          }
 else {
            encodeBinary(bytes,0,bytes.length,encodingMode,sb);
            encodingMode=BYTE_COMPACTION;
            textSubMode=SUBMODE_ALPHA;
          }
          p+=b;
        }
      }
    }
  }
  return sb.toString();
}
