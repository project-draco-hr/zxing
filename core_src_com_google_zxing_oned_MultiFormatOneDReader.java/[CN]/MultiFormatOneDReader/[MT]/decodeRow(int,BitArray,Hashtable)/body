{
  Hashtable possibleFormats=hints == null ? null : (Hashtable)hints.get(DecodeHintType.POSSIBLE_FORMATS);
  Vector readers=new Vector();
  if (possibleFormats != null) {
    if (possibleFormats.contains(BarcodeFormat.EAN_13) || possibleFormats.contains(BarcodeFormat.UPC_A) || possibleFormats.contains(BarcodeFormat.EAN_8)|| possibleFormats.contains(BarcodeFormat.UPC_E)) {
      readers.addElement(new MultiFormatUPCEANReader());
    }
    if (possibleFormats.contains(BarcodeFormat.CODE_39)) {
      readers.addElement(new Code39Reader());
    }
    if (possibleFormats.contains(BarcodeFormat.CODE_128)) {
      readers.addElement(new Code128Reader());
    }
  }
  if (readers.isEmpty()) {
    readers.addElement(new MultiFormatUPCEANReader());
    readers.addElement(new Code39Reader());
    readers.addElement(new Code128Reader());
  }
  for (int i=0; i < readers.size(); i++) {
    OneDReader reader=(OneDReader)readers.elementAt(i);
    try {
      return reader.decodeRow(rowNumber,row,hints);
    }
 catch (    ReaderException re) {
    }
  }
  throw new ReaderException("No barcode was detected in this image.");
}
