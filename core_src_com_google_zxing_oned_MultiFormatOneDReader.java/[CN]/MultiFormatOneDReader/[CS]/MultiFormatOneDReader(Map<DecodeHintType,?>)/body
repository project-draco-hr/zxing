{
  Collection<BarcodeFormat> possibleFormats=hints == null ? null : (Collection<BarcodeFormat>)hints.get(DecodeHintType.POSSIBLE_FORMATS);
  boolean useCode39CheckDigit=hints != null && hints.get(DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT) != null;
  readers=new ArrayList<OneDReader>();
  if (possibleFormats != null) {
    if (possibleFormats.contains(BarcodeFormat.EAN_13) || possibleFormats.contains(BarcodeFormat.UPC_A) || possibleFormats.contains(BarcodeFormat.EAN_8)|| possibleFormats.contains(BarcodeFormat.UPC_E)) {
      readers.add(new MultiFormatUPCEANReader(hints));
    }
    if (possibleFormats.contains(BarcodeFormat.CODE_39)) {
      readers.add(new Code39Reader(useCode39CheckDigit));
    }
    if (possibleFormats.contains(BarcodeFormat.CODE_93)) {
      readers.add(new Code93Reader());
    }
    if (possibleFormats.contains(BarcodeFormat.CODE_128)) {
      readers.add(new Code128Reader());
    }
    if (possibleFormats.contains(BarcodeFormat.ITF)) {
      readers.add(new ITFReader());
    }
    if (possibleFormats.contains(BarcodeFormat.CODABAR)) {
      readers.add(new CodaBarReader());
    }
    if (possibleFormats.contains(BarcodeFormat.RSS_14)) {
      readers.add(new RSS14Reader());
    }
    if (possibleFormats.contains(BarcodeFormat.RSS_EXPANDED)) {
      readers.add(new RSSExpandedReader());
    }
  }
  if (readers.isEmpty()) {
    readers.add(new MultiFormatUPCEANReader(hints));
    readers.add(new Code39Reader());
    readers.add(new Code93Reader());
    readers.add(new Code128Reader());
    readers.add(new ITFReader());
    readers.add(new RSS14Reader());
    readers.add(new RSSExpandedReader());
  }
}
