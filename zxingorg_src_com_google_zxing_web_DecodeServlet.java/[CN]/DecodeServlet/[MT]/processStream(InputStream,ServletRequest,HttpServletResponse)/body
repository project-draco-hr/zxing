{
  BufferedImage image=ImageIO.read(is);
  if (image == null) {
    response.sendRedirect("badimage.jspx");
    return;
  }
  Reader reader=new MultiFormatReader();
  Result result;
  try {
    LuminanceSource source=new BufferedImageLuminanceSource(image);
    BinaryBitmap bitmap=new BinaryBitmap(new GlobalHistogramBinarizer(source));
    result=reader.decode(bitmap,HINTS);
  }
 catch (  ReaderException re) {
    try {
      LuminanceSource source=new BufferedImageLuminanceSource(image);
      BinaryBitmap bitmap=new BinaryBitmap(new HybridBinarizer(source));
      result=reader.decode(bitmap,HINTS);
    }
 catch (    NotFoundException nfe) {
      log.info("Not found: " + re.toString());
      response.sendRedirect("notfound.jspx");
      return;
    }
catch (    FormatException fe) {
      log.info("Format problem: " + re.toString());
      response.sendRedirect("format.jspx");
      return;
    }
catch (    ChecksumException ce) {
      log.info("Checksum problem: " + re.toString());
      response.sendRedirect("format.jspx");
      return;
    }
  }
  if (request.getParameter("full") == null) {
    response.setContentType("text/plain");
    response.setCharacterEncoding("UTF8");
    Writer out=new OutputStreamWriter(response.getOutputStream(),"UTF8");
    try {
      out.write(result.getText());
    }
  finally {
      out.close();
    }
  }
 else {
    request.setAttribute("result",result);
    byte[] rawBytes=result.getRawBytes();
    if (rawBytes != null) {
      request.setAttribute("rawBytesString",arrayToString(rawBytes));
    }
 else {
      request.setAttribute("rawBytesString","(Not applicable)");
    }
    String text=result.getText();
    if (text != null) {
      request.setAttribute("text",StringEscapeUtils.escapeXml(text));
    }
 else {
      request.setAttribute("text","(Not applicable)");
    }
    ParsedResult parsedResult=ResultParser.parseResult(result);
    request.setAttribute("parsedResult",parsedResult);
    String displayResult=parsedResult.getDisplayResult();
    if (displayResult != null) {
      request.setAttribute("displayResult",StringEscapeUtils.escapeXml(displayResult));
    }
 else {
      request.setAttribute("displayResult","(Not applicable)");
    }
    request.getRequestDispatcher("decoderesult.jspx").forward(request,response);
  }
}
