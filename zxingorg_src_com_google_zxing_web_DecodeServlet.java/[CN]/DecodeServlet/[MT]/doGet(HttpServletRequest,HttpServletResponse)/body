{
  String imageURIString=request.getParameter("u");
  if (imageURIString == null || imageURIString.length() == 0) {
    response.sendRedirect("badurl.jspx");
    return;
  }
  if (!(imageURIString.startsWith("http://") || imageURIString.startsWith("https://"))) {
    imageURIString="http://" + imageURIString;
  }
  URI imageURI;
  try {
    imageURI=new URI(imageURIString);
  }
 catch (  URISyntaxException urise) {
    response.sendRedirect("badurl.jspx");
    return;
  }
  HttpUriRequest getRequest=new HttpGet(imageURI);
  getRequest.addHeader("Connection","close");
  HttpResponse getResponse;
  try {
    getResponse=client.execute(getRequest);
  }
 catch (  IllegalArgumentException iae) {
    getRequest.abort();
    response.sendRedirect("badurl.jspx");
    return;
  }
catch (  SocketException se) {
    getRequest.abort();
    response.sendRedirect("badurl.jspx");
    return;
  }
catch (  UnknownHostException uhe) {
    getRequest.abort();
    response.sendRedirect("badurl.jspx");
    return;
  }
  if (getResponse.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK) {
    response.sendRedirect("badurl.jspx");
    return;
  }
  if (!isSizeOK(getResponse)) {
    response.sendRedirect("badimage.jspx");
    return;
  }
  log.info("Decoding " + imageURI);
  HttpEntity entity=getResponse.getEntity();
  InputStream is=entity.getContent();
  try {
    processStream(is,request,response);
  }
  finally {
    entity.consumeContent();
    is.close();
    connectionManager.closeExpiredConnections();
    connectionManager.closeIdleConnections(0L,TimeUnit.MILLISECONDS);
  }
}
