{
  String imageURIString=request.getParameter("u");
  if (imageURIString == null || imageURIString.isEmpty()) {
    log.info("URI was empty");
    response.sendRedirect("badurl.jspx");
    return;
  }
  imageURIString=imageURIString.trim();
  if (!(imageURIString.startsWith("http://") || imageURIString.startsWith("https://"))) {
    imageURIString="http://" + imageURIString;
  }
  URL imageURL;
  try {
    imageURL=new URI(imageURIString).toURL();
  }
 catch (  URISyntaxException urise) {
    log.info("URI was not valid: " + imageURIString);
    response.sendRedirect("badurl.jspx");
    return;
  }
catch (  MalformedURLException mue) {
    log.info("URI was not valid: " + imageURIString);
    response.sendRedirect("badurl.jspx");
    return;
  }
  HttpURLConnection connection;
  try {
    connection=(HttpURLConnection)imageURL.openConnection();
  }
 catch (  IllegalArgumentException iae) {
    log.info("URI could not be opened: " + imageURL);
    response.sendRedirect("badurl.jspx");
    return;
  }
  connection.setAllowUserInteraction(false);
  connection.setReadTimeout(5000);
  connection.setConnectTimeout(5000);
  connection.setRequestProperty("User-Agent","zxing.org");
  connection.setRequestProperty("Connection","close");
  try {
    try {
      connection.connect();
    }
 catch (    IOException ioe) {
      log.info(ioe.toString());
      response.sendRedirect("badurl.jspx");
      return;
    }
    InputStream is=null;
    try {
      is=connection.getInputStream();
      if (connection.getResponseCode() != HttpServletResponse.SC_OK) {
        log.info("Unsuccessful return code: " + connection.getResponseCode());
        response.sendRedirect("badurl.jspx");
        return;
      }
      if (connection.getHeaderFieldInt("Content-Length",0) > MAX_IMAGE_SIZE) {
        log.info("Too large");
        response.sendRedirect("badimage.jspx");
        return;
      }
      log.info("Decoding " + imageURL);
      processStream(is,request,response);
    }
 catch (    IOException ioe) {
      log.info(ioe.toString());
      response.sendRedirect("badurl.jspx");
    }
 finally {
      if (is != null) {
        consumeRemainder(is);
        is.close();
      }
    }
  }
  finally {
    connection.disconnect();
  }
}
