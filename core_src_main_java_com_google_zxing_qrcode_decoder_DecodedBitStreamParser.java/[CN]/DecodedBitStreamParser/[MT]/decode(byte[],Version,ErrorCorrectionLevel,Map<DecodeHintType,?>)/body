{
  BitSource bits=new BitSource(bytes);
  StringBuilder result=new StringBuilder(50);
  List<byte[]> byteSegments=new ArrayList<>(1);
  int symbolSequence=-1;
  int parityData=-1;
  try {
    CharacterSetECI currentCharacterSetECI=null;
    boolean fc1InEffect=false;
    Mode mode;
    do {
      if (bits.available() < 4) {
        mode=Mode.TERMINATOR;
      }
 else {
        mode=Mode.forBits(bits.readBits(4));
      }
      if (mode != Mode.TERMINATOR) {
        if (mode == Mode.FNC1_FIRST_POSITION || mode == Mode.FNC1_SECOND_POSITION) {
          fc1InEffect=true;
        }
 else         if (mode == Mode.STRUCTURED_APPEND) {
          if (bits.available() < 16) {
            throw FormatException.getFormatInstance();
          }
          symbolSequence=bits.readBits(8);
          parityData=bits.readBits(8);
        }
 else         if (mode == Mode.ECI) {
          int value=parseECIValue(bits);
          currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);
          if (currentCharacterSetECI == null) {
            throw FormatException.getFormatInstance();
          }
        }
 else {
          if (mode == Mode.HANZI) {
            int subset=bits.readBits(4);
            int countHanzi=bits.readBits(mode.getCharacterCountBits(version));
            if (subset == GB2312_SUBSET) {
              decodeHanziSegment(bits,result,countHanzi);
            }
          }
 else {
            int count=bits.readBits(mode.getCharacterCountBits(version));
            if (mode == Mode.NUMERIC) {
              decodeNumericSegment(bits,result,count);
            }
 else             if (mode == Mode.ALPHANUMERIC) {
              decodeAlphanumericSegment(bits,result,count,fc1InEffect);
            }
 else             if (mode == Mode.BYTE) {
              decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments,hints);
            }
 else             if (mode == Mode.KANJI) {
              decodeKanjiSegment(bits,result,count);
            }
 else {
              throw FormatException.getFormatInstance();
            }
          }
        }
      }
    }
 while (mode != Mode.TERMINATOR);
  }
 catch (  IllegalArgumentException iae) {
    throw FormatException.getFormatInstance();
  }
  return new DecoderResult(bytes,result.toString(),byteSegments.isEmpty() ? null : byteSegments,ecLevel == null ? null : ecLevel.toString(),symbolSequence,parityData);
}
