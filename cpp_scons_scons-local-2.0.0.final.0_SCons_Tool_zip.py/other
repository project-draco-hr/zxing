"SCons.Tool.zip\n\nTool-specific initialization for zip.\n\nThere normally shouldn't be any need to import this module directly.\nIt will usually be imported through the generic SCons.Tool.Tool()\nselection method.\n\n"
__revision__ = 'src/engine/SCons/Tool/zip.py 5023 2010/06/14 22:05:46 scons'
import os.path
import SCons.Builder
import SCons.Defaults
import SCons.Node.FS
import SCons.Util
try:
    import zipfile
    internal_zip = 1
except ImportError:
    internal_zip = 0
if internal_zip:
    zipcompression = zipfile.ZIP_DEFLATED

    def zip(target, source, env):
        compression = env.get('ZIPCOMPRESSION', 0)
        zf = zipfile.ZipFile(str(target[0]), 'w', compression)
        for s in source:
            if s.isdir():
                for (dirpath, dirnames, filenames) in os.walk(str(s)):
                    for fname in filenames:
                        path = os.path.join(dirpath, fname)
                        if os.path.isfile(path):
                            zf.write(path)
            else:
                zf.write(str(s))
        zf.close()
else:
    zipcompression = 0
    zip = '$ZIP $ZIPFLAGS ${TARGET.abspath} $SOURCES'
zipAction = SCons.Action.Action(zip, varlist=['ZIPCOMPRESSION'])
ZipBuilder = SCons.Builder.Builder(action=SCons.Action.Action('$ZIPCOM', '$ZIPCOMSTR'), source_factory=SCons.Node.FS.Entry, source_scanner=SCons.Defaults.DirScanner, suffix='$ZIPSUFFIX', multi=1)
