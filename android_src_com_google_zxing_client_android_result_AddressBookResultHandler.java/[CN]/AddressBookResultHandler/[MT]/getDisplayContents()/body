{
  AddressBookParsedResult result=(AddressBookParsedResult)getResult();
  StringBuilder contents=new StringBuilder(100);
  ParsedResult.maybeAppend(result.getNames(),contents);
  int namesLength=contents.length();
  String pronunciation=result.getPronunciation();
  if (pronunciation != null && !pronunciation.isEmpty()) {
    contents.append("\n(");
    contents.append(pronunciation);
    contents.append(')');
  }
  ParsedResult.maybeAppend(result.getTitle(),contents);
  ParsedResult.maybeAppend(result.getOrg(),contents);
  ParsedResult.maybeAppend(result.getAddresses(),contents);
  String[] numbers=result.getPhoneNumbers();
  if (numbers != null) {
    for (    String number : numbers) {
      if (number != null) {
        ParsedResult.maybeAppend(PhoneNumberUtils.formatNumber(number),contents);
      }
    }
  }
  ParsedResult.maybeAppend(result.getEmails(),contents);
  ParsedResult.maybeAppend(result.getURLs(),contents);
  String birthday=result.getBirthday();
  if (birthday != null && !birthday.isEmpty()) {
    Date date=parseDate(birthday);
    if (date != null) {
      ParsedResult.maybeAppend(DateFormat.getDateInstance(DateFormat.MEDIUM).format(date.getTime()),contents);
    }
  }
  ParsedResult.maybeAppend(result.getNote(),contents);
  if (namesLength > 0) {
    Spannable styled=new SpannableString(contents.toString());
    styled.setSpan(new StyleSpan(Typeface.BOLD),0,namesLength,0);
    return styled;
  }
 else {
    return contents.toString();
  }
}
