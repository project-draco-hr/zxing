{
  boolean steep=Math.abs(toY - fromY) > Math.abs(toX - fromX);
  if (steep) {
    int temp=fromX;
    fromX=fromY;
    fromY=temp;
    temp=toX;
    toX=toY;
    toY=temp;
  }
  int dx=Math.abs(toX - fromX);
  int dy=Math.abs(toY - fromY);
  int error=-dx >> 1;
  int xstep=fromX < toX ? 1 : -1;
  int ystep=fromY < toY ? 1 : -1;
  int state=0;
  int xLimit=toX + xstep;
  for (int x=fromX, y=fromY; x != xLimit; x+=xstep) {
    int realX=steep ? y : x;
    int realY=steep ? x : y;
    if ((state == 1) == image.get(realX,realY)) {
      if (state == 2) {
        int diffX=x - fromX;
        int diffY=y - fromY;
        return (float)Math.sqrt((double)(diffX * diffX + diffY * diffY));
      }
      state++;
    }
    error+=dy;
    if (error > 0) {
      if (y == toY) {
        break;
      }
      y+=ystep;
      error-=dx;
    }
  }
  if (state == 2) {
    int diffX=toX + xstep - fromX;
    int diffY=toY - fromY;
    return (float)Math.sqrt((double)(diffX * diffX + diffY * diffY));
  }
  return Float.NaN;
}
