{
  int[] counters=new int[4];
  int end=row.getSize();
  int rowOffset=startRange[1];
  for (int x=0; x < 4 && rowOffset < end; x++) {
    int bestMatch=decodeDigit(row,counters,rowOffset,L_PATTERNS);
    result.append((char)('0' + bestMatch));
    for (int i=0; i < counters.length; i++) {
      rowOffset+=counters[i];
    }
  }
  int[] middleRange=findGuardPattern(row,rowOffset,true,MIDDLE_PATTERN);
  rowOffset=middleRange[1];
  for (int x=0; x < 4 && rowOffset < end; x++) {
    int bestMatch=decodeDigit(row,counters,rowOffset,L_PATTERNS);
    result.append((char)('0' + bestMatch));
    for (int i=0; i < counters.length; i++) {
      rowOffset+=counters[i];
    }
  }
  return rowOffset;
}
