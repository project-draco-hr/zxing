{
  PerspectiveTransform transform=PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX,p1ToY,p2ToX,p2ToY,p3ToX,p3ToY,p4ToX,p4ToY,p1FromX,p1FromY,p2FromX,p2FromY,p3FromX,p3FromY,p4FromX,p4FromY);
  BitMatrix bits=new BitMatrix(dimension);
  float[] points=new float[dimension << 1];
  for (int i=0; i < dimension; i++) {
    int max=points.length;
    float iValue=(float)i + 0.5f;
    for (int j=0; j < max; j+=2) {
      points[j]=(float)(j >> 1) + 0.5f;
      points[j + 1]=iValue;
    }
    transform.transformPoints(points);
    checkAndNudgePoints(image,points);
    try {
      for (int j=0; j < max; j+=2) {
        if (image.isBlack((int)points[j],(int)points[j + 1])) {
          bits.set(i,j >> 1);
        }
      }
    }
 catch (    ArrayIndexOutOfBoundsException aioobe) {
      throw new ReaderException(aioobe.toString());
    }
  }
  return bits;
}
