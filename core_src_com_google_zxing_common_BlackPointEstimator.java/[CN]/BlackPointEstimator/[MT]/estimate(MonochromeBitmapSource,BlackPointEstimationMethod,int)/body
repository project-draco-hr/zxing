{
  int width=source.getWidth();
  int height=source.getHeight();
  initArrays(width);
  if (method.equals(BlackPointEstimationMethod.TWO_D_SAMPLING)) {
    for (int y=1; y < 5; y++) {
      int row=height * y / 5;
      int[] localLuminances=source.getLuminanceRow(row,luminances);
      int right=width * 4 / 5;
      for (int x=width / 5; x < right; x++) {
        histogram[localLuminances[x] >> LUMINANCE_SHIFT]++;
      }
    }
  }
 else   if (method.equals(BlackPointEstimationMethod.ROW_SAMPLING)) {
    if (argument < 0 || argument >= height) {
      throw new IllegalArgumentException("Row is not within the image: " + argument);
    }
    int[] localLuminances=source.getLuminanceRow(argument,luminances);
    for (int x=0; x < width; x++) {
      histogram[localLuminances[x] >> LUMINANCE_SHIFT]++;
    }
  }
 else {
    throw new IllegalArgumentException("Unknown method");
  }
  return findBestValley(histogram) << LUMINANCE_SHIFT;
}
