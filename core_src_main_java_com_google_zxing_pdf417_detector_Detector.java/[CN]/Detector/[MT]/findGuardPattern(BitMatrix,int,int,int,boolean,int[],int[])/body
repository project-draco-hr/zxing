{
  Arrays.fill(counters,0,counters.length,0);
  int patternStart=column;
  int pixelDrift=0;
  while (matrix.get(patternStart,row) && patternStart > 0 && pixelDrift++ < MAX_PIXEL_DRIFT) {
    patternStart--;
  }
  int x=patternStart;
  int counterPosition=0;
  int patternLength=pattern.length;
  boolean isWhite=whiteFirst;
  for (; x < width; x++) {
    boolean pixel=matrix.get(x,row);
    if (pixel ^ isWhite) {
      counters[counterPosition]++;
    }
 else {
      if (counterPosition == patternLength - 1) {
        if (patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {
          return new int[]{patternStart,x};
        }
        patternStart+=counters[0] + counters[1];
        System.arraycopy(counters,2,counters,0,patternLength - 2);
        counters[patternLength - 2]=0;
        counters[patternLength - 1]=0;
        counterPosition--;
      }
 else {
        counterPosition++;
      }
      counters[counterPosition]=1;
      isWhite=!isWhite;
    }
  }
  if (counterPosition == patternLength - 1) {
    if (patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {
      return new int[]{patternStart,x - 1};
    }
  }
  return null;
}
