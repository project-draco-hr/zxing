{
  assertFalse(testResults.isEmpty());
  File[] imageFiles=getImageFiles();
  int[] falsePositives=new int[testResults.size()];
  for (  File testImage : imageFiles) {
    System.out.printf("Starting %s\n",testImage.getAbsolutePath());
    BufferedImage image=ImageIO.read(testImage);
    if (image == null) {
      throw new IOException("Could not read image: " + testImage);
    }
    for (int x=0; x < testResults.size(); x++) {
      TestResult testResult=testResults.get(x);
      if (!checkForFalsePositives(image,testResult.getRotation())) {
        falsePositives[x]++;
      }
    }
  }
  int totalFalsePositives=0;
  int totalAllowed=0;
  for (int x=0; x < testResults.size(); x++) {
    TestResult testResult=testResults.get(x);
    totalFalsePositives+=falsePositives[x];
    totalAllowed+=testResult.getFalsePositivesAllowed();
  }
  if (totalFalsePositives < totalAllowed) {
    System.out.printf("  +++ Test too lax by %d images\n",totalAllowed - totalFalsePositives);
  }
 else   if (totalFalsePositives > totalAllowed) {
    System.out.printf("  --- Test failed by %d images\n",totalFalsePositives - totalAllowed);
  }
  for (int x=0; x < testResults.size(); x++) {
    TestResult testResult=testResults.get(x);
    System.out.printf("Rotation %d degrees: %d of %d images were false positives (%d allowed)\n",(int)testResult.getRotation(),falsePositives[x],imageFiles.length,testResult.getFalsePositivesAllowed());
    assertTrue("Rotation " + testResult.getRotation() + " degrees: Too many false positives found",falsePositives[x] <= testResult.getFalsePositivesAllowed());
  }
}
