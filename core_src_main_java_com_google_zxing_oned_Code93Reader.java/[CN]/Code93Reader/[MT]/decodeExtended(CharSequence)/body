{
  int length=encoded.length();
  StringBuilder decoded=new StringBuilder(length);
  for (int i=0; i < length; i++) {
    char c=encoded.charAt(i);
    if (c >= 'a' && c <= 'd') {
      if (i >= length - 1) {
        throw FormatException.getFormatInstance();
      }
      char next=encoded.charAt(i + 1);
      char decodedChar='\0';
switch (c) {
case 'd':
        if (next >= 'A' && next <= 'Z') {
          decodedChar=(char)(next + 32);
        }
 else {
          throw FormatException.getFormatInstance();
        }
      break;
case 'a':
    if (next >= 'A' && next <= 'Z') {
      decodedChar=(char)(next - 64);
    }
 else {
      throw FormatException.getFormatInstance();
    }
  break;
case 'b':
if (next >= 'A' && next <= 'E') {
  decodedChar=(char)(next - 38);
}
 else if (next >= 'F' && next <= 'J') {
  decodedChar=(char)(next - 11);
}
 else if (next >= 'K' && next <= 'O') {
  decodedChar=(char)(next + 16);
}
 else if (next >= 'P' && next <= 'S') {
  decodedChar=(char)(next + 43);
}
 else if (next >= 'T' && next <= 'Z') {
  decodedChar=127;
}
 else {
  throw FormatException.getFormatInstance();
}
break;
case 'c':
if (next >= 'A' && next <= 'O') {
decodedChar=(char)(next - 32);
}
 else if (next == 'Z') {
decodedChar=':';
}
 else {
throw FormatException.getFormatInstance();
}
break;
}
decoded.append(decodedChar);
i++;
}
 else {
decoded.append(c);
}
}
return decoded.toString();
}
