def __init__(self, dswfile, source, env):
    _DSWGenerator.__init__(self, dswfile, source, env)
    self.file = None
    self.version = self.env['MSVS_VERSION']
    (self.version_num, self.suite) = msvs_parse_version(self.version)
    self.versionstr = '7.00'
    if (self.version_num >= 8.0):
        self.versionstr = '9.00'
    elif (self.version_num >= 7.1):
        self.versionstr = '8.00'
    if (self.version_num >= 8.0):
        self.versionstr = '9.00'
    if (('slnguid' in env) and env['slnguid']):
        self.slnguid = env['slnguid']
    else:
        self.slnguid = _generateGUID(dswfile, self.name)
    self.configs = {}
    self.nokeep = 0
    if (('nokeep' in env) and (env['variant'] != 0)):
        self.nokeep = 1
    if ((self.nokeep == 0) and os.path.exists(self.dswfile)):
        self.Parse()

    def AddConfig(self, variant, dswfile=dswfile):
        config = Config()
        match = re.match('(.*)\\|(.*)', variant)
        if match:
            config.variant = match.group(1)
            config.platform = match.group(2)
        else:
            config.variant = variant
            config.platform = 'Win32'
        self.configs[variant] = config
        print (((((((("Adding '" + self.name) + ' - ') + config.variant) + '|') + config.platform) + "' to '") + str(dswfile)) + "'")
    if ('variant' not in env):
        raise SCons.Errors.InternalError(("You must specify a 'variant' argument (i.e. 'Debug' or " + "'Release') to create an MSVS Solution File."))
    elif SCons.Util.is_String(env['variant']):
        AddConfig(self, env['variant'])
    elif SCons.Util.is_List(env['variant']):
        for variant in env['variant']:
            AddConfig(self, variant)
    self.platforms = []
    for key in self.configs.keys():
        platform = self.configs[key].platform
        if (not (platform in self.platforms)):
            self.platforms.append(platform)
