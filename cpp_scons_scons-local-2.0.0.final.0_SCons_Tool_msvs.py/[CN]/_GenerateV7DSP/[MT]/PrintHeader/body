def PrintHeader(self):
    env = self.env
    versionstr = self.versionstr
    name = self.name
    encoding = self.env.subst('$MSVSENCODING')
    scc_provider = env.get('MSVS_SCC_PROVIDER', '')
    scc_project_name = env.get('MSVS_SCC_PROJECT_NAME', '')
    scc_aux_path = env.get('MSVS_SCC_AUX_PATH', '')
    scc_local_path = env.get('MSVS_SCC_LOCAL_PATH', '')
    project_guid = env.get('MSVS_PROJECT_GUID', '')
    if ((self.version_num >= 8.0) and (not project_guid)):
        project_guid = _generateGUID(self.dspfile, '')
    if (scc_provider != ''):
        scc_attrs = ('\tProjectGUID="%s"\n\tSccProjectName="%s"\n\tSccAuxPath="%s"\n\tSccLocalPath="%s"\n\tSccProvider="%s"' % (project_guid, scc_project_name, scc_aux_path, scc_local_path, scc_provider))
    else:
        scc_attrs = ('\tProjectGUID="%s"\n\tSccProjectName="%s"\n\tSccLocalPath="%s"' % (project_guid, scc_project_name, scc_local_path))
    self.file.write((self.dspheader % locals()))
    self.file.write('\t<Platforms>\n')
    for platform in self.platforms:
        self.file.write(('\t\t<Platform\n\t\t\tName="%s"/>\n' % platform))
    self.file.write('\t</Platforms>\n')
    if (self.version_num >= 8.0):
        self.file.write('\t<ToolFiles>\n\t</ToolFiles>\n')
