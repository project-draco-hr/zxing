def tool_list(platform, env):
    other_plat_tools = []
    if (str(platform) == 'win32'):
        'prefer Microsoft tools on Windows'
        linkers = ['mslink', 'gnulink', 'ilink', 'linkloc', 'ilink32']
        c_compilers = ['msvc', 'mingw', 'gcc', 'intelc', 'icl', 'icc', 'cc', 'bcc32']
        cxx_compilers = ['msvc', 'intelc', 'icc', 'g++', 'c++', 'bcc32']
        assemblers = ['masm', 'nasm', 'gas', '386asm']
        fortran_compilers = ['gfortran', 'g77', 'ifl', 'cvf', 'f95', 'f90', 'fortran']
        ars = ['mslib', 'ar', 'tlib']
        other_plat_tools = ['msvs', 'midl']
    elif (str(platform) == 'os2'):
        'prefer IBM tools on OS/2'
        linkers = ['ilink', 'gnulink']
        c_compilers = ['icc', 'gcc']
        cxx_compilers = ['icc', 'g++']
        assemblers = ['nasm']
        fortran_compilers = ['ifl', 'g77']
        ars = ['ar']
    elif (str(platform) == 'irix'):
        'prefer MIPSPro on IRIX'
        linkers = ['sgilink', 'gnulink']
        c_compilers = ['sgicc', 'gcc', 'cc']
        cxx_compilers = ['sgic++', 'g++', 'c++']
        assemblers = ['as', 'gas']
        fortran_compilers = ['f95', 'f90', 'f77', 'g77', 'fortran']
        ars = ['sgiar']
    elif (str(platform) == 'sunos'):
        'prefer Forte tools on SunOS'
        linkers = ['sunlink', 'gnulink']
        c_compilers = ['suncc', 'gcc', 'cc']
        cxx_compilers = ['sunc++', 'g++', 'c++']
        assemblers = ['as', 'gas']
        fortran_compilers = ['sunf95', 'sunf90', 'sunf77', 'f95', 'f90', 'f77', 'gfortran', 'g77', 'fortran']
        ars = ['sunar']
    elif (str(platform) == 'hpux'):
        'prefer aCC tools on HP-UX'
        linkers = ['hplink', 'gnulink']
        c_compilers = ['hpcc', 'gcc', 'cc']
        cxx_compilers = ['hpc++', 'g++', 'c++']
        assemblers = ['as', 'gas']
        fortran_compilers = ['f95', 'f90', 'f77', 'g77', 'fortran']
        ars = ['ar']
    elif (str(platform) == 'aix'):
        'prefer AIX Visual Age tools on AIX'
        linkers = ['aixlink', 'gnulink']
        c_compilers = ['aixcc', 'gcc', 'cc']
        cxx_compilers = ['aixc++', 'g++', 'c++']
        assemblers = ['as', 'gas']
        fortran_compilers = ['f95', 'f90', 'aixf77', 'g77', 'fortran']
        ars = ['ar']
    elif (str(platform) == 'darwin'):
        'prefer GNU tools on Mac OS X, except for some linkers and IBM tools'
        linkers = ['applelink', 'gnulink']
        c_compilers = ['gcc', 'cc']
        cxx_compilers = ['g++', 'c++']
        assemblers = ['as']
        fortran_compilers = ['gfortran', 'f95', 'f90', 'g77']
        ars = ['ar']
    else:
        'prefer GNU tools on all other platforms'
        linkers = ['gnulink', 'mslink', 'ilink']
        c_compilers = ['gcc', 'msvc', 'intelc', 'icc', 'cc']
        cxx_compilers = ['g++', 'msvc', 'intelc', 'icc', 'c++']
        assemblers = ['gas', 'nasm', 'masm']
        fortran_compilers = ['gfortran', 'g77', 'ifort', 'ifl', 'f95', 'f90', 'f77']
        ars = ['ar', 'mslib']
    c_compiler = (FindTool(c_compilers, env) or c_compilers[0])
    if (c_compiler and (c_compiler == 'mingw')):
        cxx_compiler = None
        linker = None
        assembler = None
        fortran_compiler = None
        ar = None
    else:
        if (c_compiler in ('msvc', 'intelc', 'icc')):
            cxx_compiler = None
        else:
            cxx_compiler = (FindTool(cxx_compilers, env) or cxx_compilers[0])
        linker = (FindTool(linkers, env) or linkers[0])
        assembler = (FindTool(assemblers, env) or assemblers[0])
        fortran_compiler = (FindTool(fortran_compilers, env) or fortran_compilers[0])
        ar = (FindTool(ars, env) or ars[0])
    other_tools = FindAllTools((other_plat_tools + ['dmd', 'filesystem', 'm4', 'wix', 'lex', 'yacc', 'rpcgen', 'swig', 'jar', 'javac', 'javah', 'rmic', 'dvipdf', 'dvips', 'gs', 'tex', 'latex', 'pdflatex', 'pdftex', 'tar', 'zip', 'rpm', 'BitKeeper', 'CVS', 'Perforce', 'RCS', 'SCCS']), env)
    tools = ([linker, c_compiler, cxx_compiler, fortran_compiler, assembler, ar] + other_tools)
    return [x for x in tools if x]
