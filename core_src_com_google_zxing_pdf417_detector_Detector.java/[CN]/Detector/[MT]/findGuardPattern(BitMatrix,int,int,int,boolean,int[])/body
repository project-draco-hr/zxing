{
  int patternLength=pattern.length;
  int[] counters=new int[patternLength];
  boolean isWhite=whiteFirst;
  int counterPosition=0;
  int patternStart=column;
  for (int x=column; x < column + width; x++) {
    boolean pixel=matrix.get(x,row);
    if (pixel ^ isWhite) {
      counters[counterPosition]++;
    }
 else {
      if (counterPosition == patternLength - 1) {
        if (patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE) < MAX_AVG_VARIANCE) {
          return new int[]{patternStart,x};
        }
        patternStart+=counters[0] + counters[1];
        for (int y=2; y < patternLength; y++) {
          counters[y - 2]=counters[y];
        }
        counters[patternLength - 2]=0;
        counters[patternLength - 1]=0;
        counterPosition--;
      }
 else {
        counterPosition++;
      }
      counters[counterPosition]=1;
      isWhite=!isWhite;
    }
  }
  return null;
}
