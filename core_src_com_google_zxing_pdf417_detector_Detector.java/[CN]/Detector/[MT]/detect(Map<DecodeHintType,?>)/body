{
  BitMatrix matrix=image.getBlackMatrix();
  int rowStep=8;
  ResultPoint[] vertices=findVertices(matrix,rowStep);
  if (vertices == null) {
    vertices=findVertices180(matrix,rowStep);
    if (vertices != null) {
      correctVertices(matrix,vertices,true);
    }
  }
 else {
    correctVertices(matrix,vertices,false);
  }
  if (vertices == null) {
    throw NotFoundException.getNotFoundInstance();
  }
  float moduleWidth=computeModuleWidth(vertices);
  if (moduleWidth < 1.0f) {
    throw NotFoundException.getNotFoundInstance();
  }
  int dimension=computeDimension(vertices[12],vertices[14],vertices[13],vertices[15],moduleWidth);
  if (dimension < 1) {
    throw NotFoundException.getNotFoundInstance();
  }
  int yDimension=Math.max(computeYDimension(vertices[12],vertices[14],vertices[13],vertices[15],moduleWidth),dimension);
  BitMatrix linesMatrix=sampleLines(vertices,dimension,yDimension);
  BitMatrix linesGrid=new LinesSampler(linesMatrix,dimension).sample();
  return new DetectorResult(linesGrid,new ResultPoint[]{vertices[5],vertices[4],vertices[6],vertices[7]});
}
