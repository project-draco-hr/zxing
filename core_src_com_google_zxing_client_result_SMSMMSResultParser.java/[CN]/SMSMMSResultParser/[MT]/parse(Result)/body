{
  String rawText=result.getText();
  if (!(rawText.startsWith("sms:") || rawText.startsWith("SMS:") || rawText.startsWith("mms:")|| rawText.startsWith("MMS:"))) {
    return null;
  }
  Hashtable nameValuePairs=parseNameValuePairs(rawText);
  String subject=null;
  String body=null;
  boolean querySyntax=false;
  if (nameValuePairs != null && !nameValuePairs.isEmpty()) {
    subject=(String)nameValuePairs.get("subject");
    body=(String)nameValuePairs.get("body");
    querySyntax=true;
  }
  int queryStart=rawText.indexOf('?',4);
  String smsURIWithoutQuery;
  if (queryStart < 0 || !querySyntax) {
    smsURIWithoutQuery=rawText.substring(4);
  }
 else {
    smsURIWithoutQuery=rawText.substring(4,queryStart);
  }
  int lastComma=-1;
  int comma;
  Vector numbers=new Vector(1);
  Vector vias=new Vector(1);
  while ((comma=smsURIWithoutQuery.indexOf(',',lastComma + 1)) > lastComma) {
    String numberPart=smsURIWithoutQuery.substring(lastComma + 1,comma);
    addNumberVia(numbers,vias,numberPart);
    lastComma=comma;
  }
  addNumberVia(numbers,vias,smsURIWithoutQuery.substring(lastComma + 1));
  return new SMSParsedResult(toStringArray(numbers),toStringArray(vias),subject,body);
}
