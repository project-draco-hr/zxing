def invalidate_node_memos(targets):
    '\n    Invalidate the memoized values of all Nodes (files or directories)\n    that are associated with the given entries. Has been added to\n    clear the cache of nodes affected by a direct execution of an\n    action (e.g.  Delete/Copy/Chmod). Existing Node caches become\n    inconsistent if the action is run through Execute().  The argument\n    `targets` can be a single Node object or filename, or a sequence\n    of Nodes/filenames.\n    '
    from traceback import extract_stack
    for f in extract_stack():
        if ((f[2] == 'Execute') and (f[0][(-14):] == 'Environment.py')):
            break
    else:
        return
    if (not SCons.Util.is_List(targets)):
        targets = [targets]
    for entry in targets:
        try:
            entry.clear_memoized_values()
        except AttributeError:
            node = get_default_fs().Entry(entry)
            if node:
                node.clear_memoized_values()
