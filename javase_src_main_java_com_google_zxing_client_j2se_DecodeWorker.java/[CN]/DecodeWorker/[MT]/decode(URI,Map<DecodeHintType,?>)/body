{
  BufferedImage image=ImageReader.readImage(uri);
  LuminanceSource source;
  if (config.getCrop() == null) {
    source=new BufferedImageLuminanceSource(image);
  }
 else {
    int[] crop=config.getCrop();
    source=new BufferedImageLuminanceSource(image,crop[0],crop[1],crop[2],crop[3]);
  }
  BinaryBitmap bitmap=new BinaryBitmap(new HybridBinarizer(source));
  if (config.isDumpBlackPoint()) {
    dumpBlackPoint(uri,image,bitmap);
  }
  MultiFormatReader multiFormatReader=new MultiFormatReader();
  Result[] results;
  try {
    if (config.isMulti()) {
      MultipleBarcodeReader reader=new GenericMultipleBarcodeReader(multiFormatReader);
      results=reader.decodeMultiple(bitmap,hints);
    }
 else {
      results=new Result[]{multiFormatReader.decode(bitmap,hints)};
    }
  }
 catch (  NotFoundException ignored) {
    System.out.println(uri + ": No barcode found");
    return null;
  }
  if (config.isBrief()) {
    System.out.println(uri + ": Success");
  }
 else {
    for (    Result result : results) {
      ParsedResult parsedResult=ResultParser.parseResult(result);
      System.out.println(uri + " (format: " + result.getBarcodeFormat()+ ", type: "+ parsedResult.getType()+ "):\n"+ "Raw result:\n"+ result.getText()+ "\n"+ "Parsed result:\n"+ parsedResult.getDisplayResult());
      System.out.println("Found " + result.getResultPoints().length + " result points.");
      for (int i=0; i < result.getResultPoints().length; i++) {
        ResultPoint rp=result.getResultPoints()[i];
        System.out.println("  Point " + i + ": ("+ rp.getX()+ ','+ rp.getY()+ ')');
      }
    }
  }
  return results;
}
