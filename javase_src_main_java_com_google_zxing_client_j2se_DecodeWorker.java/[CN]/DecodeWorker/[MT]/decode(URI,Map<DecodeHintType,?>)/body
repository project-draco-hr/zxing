{
  BufferedImage image=ImageReader.readImage(uri);
  LuminanceSource source;
  if (config.crop == null) {
    source=new BufferedImageLuminanceSource(image);
  }
 else {
    List<Integer> crop=config.crop;
    source=new BufferedImageLuminanceSource(image,crop.get(0),crop.get(1),crop.get(2),crop.get(3));
  }
  BinaryBitmap bitmap=new BinaryBitmap(new HybridBinarizer(source));
  if (config.dumpBlackPoint) {
    dumpBlackPoint(uri,image,bitmap);
  }
  MultiFormatReader multiFormatReader=new MultiFormatReader();
  Result[] results;
  try {
    if (config.multi) {
      MultipleBarcodeReader reader=new GenericMultipleBarcodeReader(multiFormatReader);
      results=reader.decodeMultiple(bitmap,hints);
    }
 else {
      results=new Result[]{multiFormatReader.decode(bitmap,hints)};
    }
  }
 catch (  NotFoundException ignored) {
    System.out.println(uri + ": No barcode found");
    return null;
  }
  if (config.brief) {
    System.out.println(uri + ": Success");
  }
 else {
    StringWriter output=new StringWriter();
    for (int resultIndex=0; resultIndex < results.length; resultIndex++) {
      Result result=results[resultIndex];
      ParsedResult parsedResult=ResultParser.parseResult(result);
      output.write(uri + " (format: " + result.getBarcodeFormat()+ ", type: "+ parsedResult.getType()+ "):\n"+ "Raw result:\n"+ result.getText()+ "\n"+ "Parsed result:\n"+ parsedResult.getDisplayResult()+ "\n");
      output.write("Found " + result.getResultPoints().length + " result points.\n");
      for (int pointIndex=0; pointIndex < result.getResultPoints().length; pointIndex++) {
        ResultPoint rp=result.getResultPoints()[pointIndex];
        output.write("  Point " + pointIndex + ": ("+ rp.getX()+ ','+ rp.getY()+ ')');
        if (pointIndex != result.getResultPoints().length - 1) {
          output.write('\n');
        }
      }
      if (resultIndex != results.length - 1) {
        output.write('\n');
      }
    }
    System.out.println(output);
  }
  return results;
}
