def Alias(self, target, source=[], action=None, **kw):
    tlist = self.arg2nodes(target, self.ans.Alias)
    if (not SCons.Util.is_List(source)):
        source = [source]
    source = [_f for _f in source if _f]
    if (not action):
        if (not source):
            return tlist
        result = []
        for t in tlist:
            bld = t.get_builder(AliasBuilder)
            result.extend(bld(self, t, source))
        return result
    nkw = self.subst_kw(kw)
    nkw.update({'action': SCons.Action.Action(action), 'source_factory': self.fs.Entry, 'multi': 1, 'is_explicit': None, })
    bld = SCons.Builder.Builder(**nkw)
    result = []
    for t in tlist:
        b = t.get_builder()
        if ((b is None) or (b is AliasBuilder)):
            b = bld
        else:
            nkw['action'] = (b.action + action)
            b = SCons.Builder.Builder(**nkw)
        t.convert()
        result.extend(b(self, t, (t.sources + source)))
    return result
