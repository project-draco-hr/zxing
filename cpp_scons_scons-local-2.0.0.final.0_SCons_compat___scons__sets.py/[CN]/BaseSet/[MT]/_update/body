def _update(self, iterable):
    data = self._data
    if isinstance(iterable, BaseSet):
        data.update(iterable._data)
        return
    value = True
    if (type(iterable) in (list, tuple, xrange)):
        it = iter(iterable)
        while True:
            try:
                for element in it:
                    data[element] = value
                return
            except TypeError:
                transform = getattr(element, '__as_immutable__', None)
                if (transform is None):
                    raise
                data[transform()] = value
    else:
        for element in iterable:
            try:
                data[element] = value
            except TypeError:
                transform = getattr(element, '__as_immutable__', None)
                if (transform is None):
                    raise
                data[transform()] = value
