def msvc_setup_env(env):
    debug('msvc_setup_env()')
    version = get_default_version(env)
    if (version is None):
        warn_msg = 'No version of Visual Studio compiler found - C/C++ compilers most likely not set correctly'
        SCons.Warnings.warn(SCons.Warnings.VisualCMissingWarning, warn_msg)
        return None
    debug(('msvc_setup_env: using specified MSVC version %s\n' % repr(version)))
    env['MSVC_VERSION'] = version
    env['MSVS_VERSION'] = version
    env['MSVS'] = {}
    use_script = env.get('MSVC_USE_SCRIPT', True)
    if SCons.Util.is_String(use_script):
        debug(('vc.py:msvc_setup_env() use_script 1 %s\n' % repr(use_script)))
        d = script_env(use_script)
    elif use_script:
        d = msvc_find_valid_batch_script(env, version)
        debug(('vc.py:msvc_setup_env() use_script 2 %s\n' % d))
        if (not d):
            return d
    else:
        debug('MSVC_USE_SCRIPT set to False')
        warn_msg = 'MSVC_USE_SCRIPT set to False, assuming environment set correctly.'
        SCons.Warnings.warn(SCons.Warnings.VisualCMissingWarning, warn_msg)
        return None
    for (k, v) in d.items():
        debug(('vc.py:msvc_setup_env() env:%s -> %s' % (k, v)))
        env.PrependENVPath(k, v, delete_existing=True)
