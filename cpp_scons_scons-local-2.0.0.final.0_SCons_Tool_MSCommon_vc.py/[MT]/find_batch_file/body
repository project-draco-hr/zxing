def find_batch_file(env, msvc_version, host_arch, target_arch):
    '\n    Find the location of the batch script which should set up the compiler\n    for any TARGET_ARCH whose compilers were installed by Visual Studio/VCExpress\n    '
    pdir = find_vc_pdir(msvc_version)
    if (pdir is None):
        raise NoVersionFound('No version of Visual Studio found')
    debug(('vc.py: find_batch_file() pdir:%s' % pdir))
    msvc_ver_numeric = ''.join([x for x in msvc_version if (x in (string_digits + '.'))])
    vernum = float(msvc_ver_numeric)
    if (7 <= vernum < 8):
        pdir = os.path.join(pdir, os.pardir, 'Common7', 'Tools')
        batfilename = os.path.join(pdir, 'vsvars32.bat')
    elif (vernum < 7):
        pdir = os.path.join(pdir, 'Bin')
        batfilename = os.path.join(pdir, 'vcvars32.bat')
    else:
        batfilename = os.path.join(pdir, 'vcvarsall.bat')
    if (not os.path.exists(batfilename)):
        debug(('Not found: %s' % batfilename))
        batfilename = None
    installed_sdks = get_installed_sdks()
    for _sdk in installed_sdks:
        sdk_bat_file = _sdk.get_sdk_vc_script(host_arch, target_arch)
        sdk_bat_file_path = os.path.join(pdir, sdk_bat_file)
        debug(('vc.py:find_batch_file() sdk_bat_file_path:%s' % sdk_bat_file_path))
        if os.path.exists(sdk_bat_file_path):
            return (batfilename, sdk_bat_file_path)
        else:
            debug(('vc.py:find_batch_file() not found:%s' % sdk_bat_file_path))
    else:
        return (batfilename, None)
