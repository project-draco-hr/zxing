{
  int endIndex=codewordSize * ddata.getNbDatablocks() - invertedBitCount;
  if (endIndex > correctedBits.length) {
    throw FormatException.getFormatInstance();
  }
  Table lastTable=Table.UPPER;
  Table table=Table.UPPER;
  int startIndex=0;
  StringBuilder result=new StringBuilder(20);
  boolean end=false;
  boolean shift=false;
  boolean switchShift=false;
  boolean binaryShift=false;
  while (!end) {
    if (shift) {
      switchShift=true;
    }
 else {
      lastTable=table;
    }
    int code;
    if (binaryShift) {
      if (endIndex - startIndex < 5) {
        break;
      }
      int length=readCode(correctedBits,startIndex,5);
      startIndex+=5;
      if (length == 0) {
        if (endIndex - startIndex < 11) {
          break;
        }
        length=readCode(correctedBits,startIndex,11) + 31;
        startIndex+=11;
      }
      for (int charCount=0; charCount < length; charCount++) {
        if (endIndex - startIndex < 8) {
          end=true;
          break;
        }
        code=readCode(correctedBits,startIndex,8);
        result.append((char)code);
        startIndex+=8;
      }
      binaryShift=false;
    }
 else {
      if (table == Table.BINARY) {
        if (endIndex - startIndex < 8) {
          break;
        }
        code=readCode(correctedBits,startIndex,8);
        startIndex+=8;
        result.append((char)code);
      }
 else {
        int size=5;
        if (table == Table.DIGIT) {
          size=4;
        }
        if (endIndex - startIndex < size) {
          break;
        }
        code=readCode(correctedBits,startIndex,size);
        startIndex+=size;
        String str=getCharacter(table,code);
        if (str.startsWith("CTRL_")) {
          table=getTable(str.charAt(5));
          if (str.charAt(6) == 'S') {
            shift=true;
            if (str.charAt(5) == 'B') {
              binaryShift=true;
            }
          }
        }
 else {
          result.append(str);
        }
      }
    }
    if (switchShift) {
      table=lastTable;
      shift=false;
      switchShift=false;
    }
  }
  return result.toString();
}
