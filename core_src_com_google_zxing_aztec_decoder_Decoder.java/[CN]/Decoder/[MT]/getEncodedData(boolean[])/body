{
  int endIndex=codewordSize * ddata.getNbDatablocks() - invertedBitCount;
  if (endIndex > correctedBits.length) {
    throw FormatException.getFormatInstance();
  }
  int lastTable=UPPER;
  int table=UPPER;
  int startIndex=0;
  StringBuilder result=new StringBuilder(20);
  boolean end=false;
  boolean shift=false;
  boolean switchShift=false;
  while (!end) {
    if (shift) {
      switchShift=true;
    }
 else {
      lastTable=table;
    }
    int code;
switch (table) {
case BINARY:
      if (endIndex - startIndex < 8) {
        end=true;
        break;
      }
    code=readCode(correctedBits,startIndex,8);
  startIndex+=8;
result.append((char)(code));
break;
default :
int size=5;
if (table == DIGIT) {
size=4;
}
if (endIndex - startIndex < size) {
end=true;
break;
}
code=readCode(correctedBits,startIndex,size);
startIndex+=size;
String str=getCharacter(table,code);
if (str.startsWith("CTRL_")) {
table=getTable(str.charAt(5));
if (str.charAt(6) == 'S') {
shift=true;
}
}
 else {
result.append(str);
}
break;
}
if (switchShift) {
table=lastTable;
shift=false;
switchShift=false;
}
}
return result.toString();
}
