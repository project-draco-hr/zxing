{
  if (qrCodeEncoder == null) {
    Log.w(TAG,"No existing barcode to send?");
    return true;
  }
  Bitmap bitmap;
  try {
    bitmap=QRCodeEncoder.encodeAsBitmap(qrCodeEncoder.getContents(),BarcodeFormat.QR_CODE,SHARE_BARCODE_DIMENSION,SHARE_BARCODE_DIMENSION);
  }
 catch (  WriterException we) {
    Log.w(TAG,we.toString());
    return true;
  }
  File barcodeFile;
  try {
    File bsRoot=new File(Environment.getExternalStorageDirectory(),"BarcodeScanner");
    bsRoot.mkdir();
    File barcodesRoot=new File(bsRoot,"barcodes");
    barcodesRoot.mkdir();
    barcodeFile=new File(barcodesRoot,"barcode-" + System.currentTimeMillis() + ".png");
    barcodeFile.delete();
    FileOutputStream fos=new FileOutputStream(barcodeFile);
    bitmap.compress(Bitmap.CompressFormat.PNG,0,fos);
    fos.close();
  }
 catch (  IOException ioe) {
    Log.w(TAG,ioe.toString());
    return true;
  }
  Intent intent=new Intent(Intent.ACTION_SEND,Uri.parse("mailto:"));
  intent.putExtra(Intent.EXTRA_SUBJECT,getString(R.string.app_name) + " - " + qrCodeEncoder.getTitle());
  intent.putExtra(Intent.EXTRA_TEXT,qrCodeEncoder.getContents());
  intent.putExtra(Intent.EXTRA_STREAM,Uri.parse("file://" + barcodeFile.getAbsolutePath()));
  intent.setType("image/png");
  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
  startActivity(Intent.createChooser(intent,null));
  return true;
}
