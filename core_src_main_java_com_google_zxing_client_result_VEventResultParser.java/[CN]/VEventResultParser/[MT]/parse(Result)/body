{
  String rawText=getMassagedText(result);
  int vEventStart=rawText.indexOf("BEGIN:VEVENT");
  if (vEventStart < 0) {
    return null;
  }
  String summary=matchSingleVCardPrefixedField("SUMMARY",rawText,true);
  String start=matchSingleVCardPrefixedField("DTSTART",rawText,true);
  if (start == null) {
    return null;
  }
  String end=matchSingleVCardPrefixedField("DTEND",rawText,true);
  String duration=matchSingleVCardPrefixedField("DURATION",rawText,true);
  String location=matchSingleVCardPrefixedField("LOCATION",rawText,true);
  String organizer=stripMailto(matchSingleVCardPrefixedField("ORGANIZER",rawText,true));
  String[] attendees=matchVCardPrefixedField("ATTENDEE",rawText,true);
  if (attendees != null) {
    for (int i=0; i < attendees.length; i++) {
      attendees[i]=stripMailto(attendees[i]);
    }
  }
  String description=matchSingleVCardPrefixedField("DESCRIPTION",rawText,true);
  String geoString=matchSingleVCardPrefixedField("GEO",rawText,true);
  double latitude;
  double longitude;
  if (geoString == null) {
    latitude=Double.NaN;
    longitude=Double.NaN;
  }
 else {
    int semicolon=geoString.indexOf(';');
    if (semicolon < 0) {
      return null;
    }
    try {
      latitude=Double.parseDouble(geoString.substring(0,semicolon));
      longitude=Double.parseDouble(geoString.substring(semicolon + 1));
    }
 catch (    NumberFormatException ignored) {
      return null;
    }
  }
  try {
    return new CalendarParsedResult(summary,start,end,duration,location,organizer,attendees,description,latitude,longitude);
  }
 catch (  IllegalArgumentException ignored) {
    return null;
  }
}
