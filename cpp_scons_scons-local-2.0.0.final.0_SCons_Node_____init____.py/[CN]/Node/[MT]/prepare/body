def prepare(self):
    'Prepare for this Node to be built.\n\n        This is called after the Taskmaster has decided that the Node\n        is out-of-date and must be rebuilt, but before actually calling\n        the method to build the Node.\n\n        This default implementation checks that explicit or implicit\n        dependencies either exist or are derived, and initializes the\n        BuildInfo structure that will hold the information about how\n        this node is, uh, built.\n\n        (The existence of source files is checked separately by the\n        Executor, which aggregates checks for all of the targets built\n        by a specific action.)\n\n        Overriding this method allows for for a Node subclass to remove\n        the underlying file from the file system.  Note that subclass\n        methods should call this base class method to get the child\n        check and the BuildInfo structure.\n        '
    for d in self.depends:
        if d.missing():
            msg = "Explicit dependency `%s' not found, needed by target `%s'."
            raise SCons.Errors.StopError((msg % (d, self)))
    if (self.implicit is not None):
        for i in self.implicit:
            if i.missing():
                msg = "Implicit dependency `%s' not found, needed by target `%s'."
                raise SCons.Errors.StopError((msg % (i, self)))
    self.binfo = self.get_binfo()
