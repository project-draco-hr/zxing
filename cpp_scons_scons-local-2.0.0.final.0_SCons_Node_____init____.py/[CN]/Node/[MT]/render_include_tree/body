def render_include_tree(self):
    '\n        Return a text representation, suitable for displaying to the\n        user, of the include tree for the sources of this node.\n        '
    if (self.is_derived() and self.env):
        env = self.get_build_env()
        for s in self.sources:
            scanner = self.get_source_scanner(s)
            if scanner:
                path = self.get_build_scanner_path(scanner)
            else:
                path = None

            def f(node, env=env, scanner=scanner, path=path):
                return node.get_found_includes(env, scanner, path)
            return SCons.Util.render_tree(s, f, 1)
    else:
        return None
