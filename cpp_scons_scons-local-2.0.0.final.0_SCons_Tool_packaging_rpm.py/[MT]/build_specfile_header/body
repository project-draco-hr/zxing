def build_specfile_header(spec):
    ' Builds all section but the %file of a rpm specfile\n    '
    str = ''
    mandatory_header_fields = {'NAME': '%%define name %s\nName: %%{name}\n', 'VERSION': '%%define version %s\nVersion: %%{version}\n', 'PACKAGEVERSION': '%%define release %s\nRelease: %%{release}\n', 'X_RPM_GROUP': 'Group: %s\n', 'SUMMARY': 'Summary: %s\n', 'LICENSE': 'License: %s\n', }
    str = (str + SimpleTagCompiler(mandatory_header_fields).compile(spec))
    optional_header_fields = {'VENDOR': 'Vendor: %s\n', 'X_RPM_URL': 'Url: %s\n', 'SOURCE_URL': 'Source: %s\n', 'SUMMARY_': 'Summary(%s): %s\n', 'X_RPM_DISTRIBUTION': 'Distribution: %s\n', 'X_RPM_ICON': 'Icon: %s\n', 'X_RPM_PACKAGER': 'Packager: %s\n', 'X_RPM_GROUP_': 'Group(%s): %s\n', 'X_RPM_REQUIRES': 'Requires: %s\n', 'X_RPM_PROVIDES': 'Provides: %s\n', 'X_RPM_CONFLICTS': 'Conflicts: %s\n', 'X_RPM_BUILDREQUIRES': 'BuildRequires: %s\n', 'X_RPM_SERIAL': 'Serial: %s\n', 'X_RPM_EPOCH': 'Epoch: %s\n', 'X_RPM_AUTOREQPROV': 'AutoReqProv: %s\n', 'X_RPM_EXCLUDEARCH': 'ExcludeArch: %s\n', 'X_RPM_EXCLUSIVEARCH': 'ExclusiveArch: %s\n', 'X_RPM_PREFIX': 'Prefix: %s\n', 'X_RPM_CONFLICTS': 'Conflicts: %s\n', 'X_RPM_BUILDROOT': 'BuildRoot: %s\n', }
    if ('X_RPM_BUILDROOT' not in spec):
        spec['X_RPM_BUILDROOT'] = '%{_tmppath}/%{name}-%{version}-%{release}'
    str = (str + SimpleTagCompiler(optional_header_fields, mandatory=0).compile(spec))
    return str
