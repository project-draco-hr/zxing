def package(env, target, source, PACKAGEROOT, NAME, VERSION, PACKAGEVERSION, DESCRIPTION, SUMMARY, X_RPM_GROUP, LICENSE, **kw):
    SCons.Tool.Tool('rpm').generate(env)
    bld = env['BUILDERS']['Rpm']
    if (str(target[0]) != ('%s-%s' % (NAME, VERSION))):
        raise UserError('Setting target is not supported for rpm.')
    else:
        archmap = {'i686': 'i386', 'i586': 'i386', 'i486': 'i386', }
        buildarchitecture = os.uname()[4]
        buildarchitecture = archmap.get(buildarchitecture, buildarchitecture)
        if ('ARCHITECTURE' in kw):
            buildarchitecture = kw['ARCHITECTURE']
        fmt = '%s-%s-%s.%s.rpm'
        srcrpm = (fmt % (NAME, VERSION, PACKAGEVERSION, 'src'))
        binrpm = (fmt % (NAME, VERSION, PACKAGEVERSION, buildarchitecture))
        target = [srcrpm, binrpm]
    loc = locals()
    del loc['kw']
    kw.update(loc)
    del kw['source'], kw['target'], kw['env']
    if ('SOURCE_URL' not in kw):
        kw['SOURCE_URL'] = (str(target[0]) + '.tar.gz').replace('.rpm', '')
    env = OverrideEnvironment(env, kw)
    (target, source) = stripinstallbuilder(target, source, env)
    (target, source) = addspecfile(target, source, env)
    (target, source) = collectintargz(target, source, env)
    return bld(env, target, source, **kw)
