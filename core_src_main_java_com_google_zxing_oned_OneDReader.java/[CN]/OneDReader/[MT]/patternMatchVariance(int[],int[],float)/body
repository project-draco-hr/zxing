{
  int numCounters=counters.length;
  int total=0;
  int patternLength=0;
  for (int i=0; i < numCounters; i++) {
    total+=counters[i];
    patternLength+=pattern[i];
  }
  if (total < patternLength) {
    return Float.POSITIVE_INFINITY;
  }
  float unitBarWidth=(float)total / patternLength;
  maxIndividualVariance*=unitBarWidth;
  float totalVariance=0.0f;
  for (int x=0; x < numCounters; x++) {
    int counter=counters[x];
    float scaledPattern=pattern[x] * unitBarWidth;
    float variance=counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;
    if (variance > maxIndividualVariance) {
      return Float.POSITIVE_INFINITY;
    }
    totalVariance+=variance;
  }
  return totalVariance / total;
}
