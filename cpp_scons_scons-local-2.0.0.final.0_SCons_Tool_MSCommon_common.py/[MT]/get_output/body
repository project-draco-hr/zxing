def get_output(vcbat, args=None, env=None):
    'Parse the output of given bat file, with given args.'
    if (env is None):
        env = SCons.Environment.Environment(tools=[])
    vars = ['COMSPEC', 'VS90COMNTOOLS', 'VS80COMNTOOLS', 'VS71COMNTOOLS', 'VS70COMNTOOLS', 'VS60COMNTOOLS']
    env['ENV'] = normalize_env(env['ENV'], vars, force=False)
    if args:
        debug(("Calling '%s %s'" % (vcbat, args)))
        popen = SCons.Action._subproc(env, ('"%s" %s & set' % (vcbat, args)), stdin='devnull', stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    else:
        debug(("Calling '%s'" % vcbat))
        popen = SCons.Action._subproc(env, ('"%s" & set' % vcbat), stdin='devnull', stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout = popen.stdout.read()
    stderr = popen.stderr.read()
    if stderr:
        import sys
        sys.stderr.write(stderr)
    if (popen.wait() != 0):
        raise IOError(stderr.decode('mbcs'))
    output = stdout.decode('mbcs')
    return output
