def normalize_env(env, keys, force=False):
    'Given a dictionary representing a shell environment, add the variables\n    from os.environ needed for the processing of .bat files; the keys are\n    controlled by the keys argument.\n\n    It also makes sure the environment values are correctly encoded.\n\n    If force=True, then all of the key values that exist are copied\n    into the returned dictionary.  If force=false, values are only\n    copied if the key does not already exist in the copied dictionary.\n\n    Note: the environment is copied.'
    normenv = {}
    if env:
        for k in env.keys():
            normenv[k] = copy.deepcopy(env[k]).encode('mbcs')
        for k in keys:
            if ((k in os.environ) and (force or (not (k in normenv)))):
                normenv[k] = os.environ[k].encode('mbcs')
    return normenv
