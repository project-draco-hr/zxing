{
  int width=bitMatrix.getWidth();
  int columnNumber=0;
  long symbol=0;
  for (int i=0; i < width; i+=MODULES_IN_SYMBOL) {
    for (int mask=MODULES_IN_SYMBOL - 1; mask >= 0; mask--) {
      if (bitMatrix.get(i + (MODULES_IN_SYMBOL - 1 - mask),rowNumber)) {
        symbol|=1L << mask;
      }
    }
    if (columnNumber > 0) {
      int cw=getCodeword(symbol);
      if (cw < 0 && i < width - MODULES_IN_SYMBOL) {
        if (eraseCount >= erasures.length) {
          throw FormatException.getFormatInstance();
        }
        erasures[eraseCount]=next;
        next++;
        eraseCount++;
      }
 else {
        if (next >= codewords.length) {
          throw FormatException.getFormatInstance();
        }
        codewords[next++]=cw;
      }
    }
 else {
      int cw=getCodeword(symbol);
      if (ecLevel < 0 && rowNumber % 3 == 1) {
        leftColumnECData=cw;
      }
    }
    symbol=0;
    columnNumber++;
  }
  if (columnNumber > 1) {
    --next;
    if (ecLevel < 0 && rowNumber % 3 == 2) {
      rightColumnECData=codewords[next];
      if (rightColumnECData == leftColumnECData && leftColumnECData > 0) {
        ecLevel=(rightColumnECData % 30) / 3;
      }
    }
    codewords[next]=0;
  }
  return next;
}
