{
  BitSource bits=new BitSource(bytes);
  StringBuffer result=new StringBuffer();
  StringBuffer resultTrailer=new StringBuffer(0);
  Vector byteSegments=new Vector(1);
  int mode=ASCII_ENCODE;
  do {
    if (mode == ASCII_ENCODE) {
      mode=decodeAsciiSegment(bits,result,resultTrailer);
    }
 else {
switch (mode) {
case C40_ENCODE:
        decodeC40Segment(bits,result);
      break;
case TEXT_ENCODE:
    decodeTextSegment(bits,result);
  break;
case ANSIX12_ENCODE:
decodeAnsiX12Segment(bits,result);
break;
case EDIFACT_ENCODE:
decodeEdifactSegment(bits,result);
break;
case BASE256_ENCODE:
decodeBase256Segment(bits,result,byteSegments);
break;
default :
throw new ReaderException("Unsupported mode indicator");
}
mode=ASCII_ENCODE;
}
}
 while (mode != PAD_ENCODE && bits.available() > 0);
if (resultTrailer.length() > 0) {
result.append(resultTrailer);
}
return new DecoderResult(bytes,result.toString(),byteSegments.isEmpty() ? null : byteSegments);
}
