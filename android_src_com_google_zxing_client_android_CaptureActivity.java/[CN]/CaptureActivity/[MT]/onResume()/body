{
  super.onResume();
  SurfaceView surfaceView=(SurfaceView)findViewById(R.id.preview_view);
  SurfaceHolder surfaceHolder=surfaceView.getHolder();
  if (hasSurface) {
    initCamera(surfaceHolder);
  }
 else {
    surfaceHolder.addCallback(this);
    surfaceHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
  }
  Intent intent=getIntent();
  String action=intent == null ? null : intent.getAction();
  String dataString=intent == null ? null : intent.getDataString();
  if (intent != null && action != null) {
    if (action.equals(Intents.Scan.ACTION)) {
      source=Source.NATIVE_APP_INTENT;
      decodeMode=intent.getStringExtra(Intents.Scan.MODE);
      resetStatusView();
    }
 else     if (dataString != null && dataString.contains(PRODUCT_SEARCH_URL_PREFIX) && dataString.contains(PRODUCT_SEARCH_URL_SUFFIX)) {
      source=Source.PRODUCT_SEARCH_LINK;
      sourceUrl=dataString;
      decodeMode=Intents.Scan.PRODUCT_MODE;
      resetStatusView();
    }
 else     if (dataString != null && dataString.equals(ZXING_URL)) {
      source=Source.ZXING_LINK;
      sourceUrl=dataString;
      decodeMode=null;
      resetStatusView();
    }
 else {
      source=Source.NONE;
      decodeMode=null;
      resetStatusView();
    }
  }
 else {
    source=Source.NONE;
    decodeMode=null;
    if (lastResult == null) {
      resetStatusView();
    }
  }
  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(this);
  playBeep=prefs.getBoolean(PreferencesActivity.KEY_PLAY_BEEP,true);
  vibrate=prefs.getBoolean(PreferencesActivity.KEY_VIBRATE,false);
  copyToClipboard=prefs.getBoolean(PreferencesActivity.KEY_COPY_TO_CLIPBOARD,true);
  initBeepSound();
}
