{
  super.onResume();
  cameraManager=new CameraManager(getApplication());
  viewfinderView=(ViewfinderView)findViewById(R.id.viewfinder_view);
  viewfinderView.setCameraManager(cameraManager);
  resultView=findViewById(R.id.result_view);
  statusView=(TextView)findViewById(R.id.status_view);
  handler=null;
  lastResult=null;
  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(this);
  if (prefs.getBoolean(PreferencesActivity.KEY_DISABLE_AUTO_ORIENTATION,true)) {
    setRequestedOrientation(getCurrentOrientation());
  }
 else {
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR_LANDSCAPE);
  }
  resetStatusView();
  SurfaceView surfaceView=(SurfaceView)findViewById(R.id.preview_view);
  SurfaceHolder surfaceHolder=surfaceView.getHolder();
  if (hasSurface) {
    initCamera(surfaceHolder);
  }
 else {
    surfaceHolder.addCallback(this);
  }
  beepManager.updatePrefs();
  ambientLightManager.start(cameraManager);
  inactivityTimer.onResume();
  Intent intent=getIntent();
  copyToClipboard=prefs.getBoolean(PreferencesActivity.KEY_COPY_TO_CLIPBOARD,true) && (intent == null || intent.getBooleanExtra(Intents.Scan.SAVE_HISTORY,true));
  source=IntentSource.NONE;
  decodeFormats=null;
  characterSet=null;
  if (intent != null) {
    String action=intent.getAction();
    String dataString=intent.getDataString();
    if (Intents.Scan.ACTION.equals(action)) {
      source=IntentSource.NATIVE_APP_INTENT;
      decodeFormats=DecodeFormatManager.parseDecodeFormats(intent);
      decodeHints=DecodeHintManager.parseDecodeHints(intent);
      if (intent.hasExtra(Intents.Scan.WIDTH) && intent.hasExtra(Intents.Scan.HEIGHT)) {
        int width=intent.getIntExtra(Intents.Scan.WIDTH,0);
        int height=intent.getIntExtra(Intents.Scan.HEIGHT,0);
        if (width > 0 && height > 0) {
          cameraManager.setManualFramingRect(width,height);
        }
      }
      String customPromptMessage=intent.getStringExtra(Intents.Scan.PROMPT_MESSAGE);
      if (customPromptMessage != null) {
        statusView.setText(customPromptMessage);
      }
    }
 else     if (dataString != null && dataString.contains("http://www.google") && dataString.contains("/m/products/scan")) {
      source=IntentSource.PRODUCT_SEARCH_LINK;
      sourceUrl=dataString;
      decodeFormats=DecodeFormatManager.PRODUCT_FORMATS;
    }
 else     if (isZXingURL(dataString)) {
      source=IntentSource.ZXING_LINK;
      sourceUrl=dataString;
      Uri inputUri=Uri.parse(dataString);
      scanFromWebPageManager=new ScanFromWebPageManager(inputUri);
      decodeFormats=DecodeFormatManager.parseDecodeFormats(inputUri);
      decodeHints=DecodeHintManager.parseDecodeHints(inputUri);
    }
    characterSet=intent.getStringExtra(Intents.Scan.CHARACTER_SET);
  }
}
