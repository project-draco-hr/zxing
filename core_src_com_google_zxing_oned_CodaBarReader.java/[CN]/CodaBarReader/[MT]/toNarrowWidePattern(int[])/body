{
  int numCounters=counters.length;
  int maxNarrowCounter=0;
  int wideCounters;
  int minCounter=Integer.MAX_VALUE;
  for (int i=0; i < numCounters; i++) {
    if (counters[i] < minCounter) {
      minCounter=counters[i];
    }
    if (counters[i] > maxNarrowCounter) {
      maxNarrowCounter=counters[i];
    }
  }
  do {
    wideCounters=0;
    int totalWideCountersWidth=0;
    int pattern=0;
    for (int i=0; i < numCounters; i++) {
      int counter=counters[i];
      if (counters[i] > maxNarrowCounter) {
        pattern|=1 << (numCounters - 1 - i);
        wideCounters++;
        totalWideCountersWidth+=counter;
      }
    }
    if ((wideCounters == 2) || (wideCounters == 3)) {
      for (int i=0; i < CHARACTER_ENCODINGS.length; i++) {
        if (CHARACTER_ENCODINGS[i] == pattern) {
          return ALPHABET[i];
        }
      }
    }
    maxNarrowCounter--;
  }
 while (maxNarrowCounter > minCounter);
  return '!';
}
