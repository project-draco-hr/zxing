{
  int end=position + 7;
  if (end >= counterLength) {
    return -1;
  }
  int[] maxes={0,0};
  int[] mins={Integer.MAX_VALUE,Integer.MAX_VALUE};
  int[] thresholds={0,0};
  for (int i=0; i < 2; i++) {
    for (int j=position + i; j < end; j+=2) {
      if (counters[j] < mins[i]) {
        mins[i]=counters[j];
      }
      if (counters[j] > maxes[i]) {
        maxes[i]=counters[j];
      }
    }
    thresholds[i]=(mins[i] + maxes[i]) / 2;
  }
  int bitmask=1 << 7;
  int pattern=0;
  for (int i=0; i < 7; i++) {
    int barOrSpace=i & 1;
    bitmask>>=1;
    if (counters[position + i] > thresholds[barOrSpace]) {
      pattern|=bitmask;
    }
  }
  for (int i=0; i < CHARACTER_ENCODINGS.length; i++) {
    if (CHARACTER_ENCODINGS[i] == pattern) {
      return i;
    }
  }
  return -1;
}
