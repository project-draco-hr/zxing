{
  Camera.Parameters parameters=camera.getParameters();
  if (parameters == null) {
    Log.w(TAG,"Device error: no camera parameters are available. Proceeding without configuration.");
    return;
  }
  Log.i(TAG,"Initial camera parameters: " + parameters.flatten());
  if (safeMode) {
    Log.w(TAG,"In camera config safe mode -- most settings will not be honored");
  }
  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);
  initializeTorch(parameters,prefs,safeMode);
  CameraConfigurationUtils.setBestPreviewFPS(parameters);
  CameraConfigurationUtils.setFocus(parameters,prefs.getBoolean(PreferencesActivity.KEY_AUTO_FOCUS,true),prefs.getBoolean(PreferencesActivity.KEY_DISABLE_CONTINUOUS_FOCUS,true),safeMode);
  if (!safeMode) {
    if (prefs.getBoolean(PreferencesActivity.KEY_INVERT_SCAN,false)) {
      CameraConfigurationUtils.setInvertColor(parameters);
    }
    if (!prefs.getBoolean(PreferencesActivity.KEY_DISABLE_BARCODE_SCENE_MODE,true)) {
      CameraConfigurationUtils.setBarcodeSceneMode(parameters);
    }
    if (!prefs.getBoolean(PreferencesActivity.KEY_DISABLE_METERING,true)) {
      CameraConfigurationUtils.setVideoStabilization(parameters);
      CameraConfigurationUtils.setFocusArea(parameters);
      CameraConfigurationUtils.setMetering(parameters);
    }
  }
  parameters.setPreviewSize(cameraResolution.x,cameraResolution.y);
  camera.setParameters(parameters);
  Camera.Parameters afterParameters=camera.getParameters();
  Camera.Size afterSize=afterParameters.getPreviewSize();
  if (afterSize != null && (cameraResolution.x != afterSize.width || cameraResolution.y != afterSize.height)) {
    Log.w(TAG,"Camera said it supported preview size " + cameraResolution.x + 'x'+ cameraResolution.y+ ", but after setting it, preview size is "+ afterSize.width+ 'x'+ afterSize.height);
    cameraResolution.x=afterSize.width;
    cameraResolution.y=afterSize.height;
  }
}
