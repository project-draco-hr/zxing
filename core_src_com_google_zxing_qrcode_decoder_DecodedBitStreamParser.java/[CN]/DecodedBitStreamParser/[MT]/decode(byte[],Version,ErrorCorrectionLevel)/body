{
  BitSource bits=new BitSource(bytes);
  StringBuffer result=new StringBuffer();
  CharacterSetECI currentCharacterSetECI=null;
  boolean fc1InEffect=false;
  Vector byteSegments=new Vector(1);
  Mode mode;
  do {
    if (bits.available() < 4) {
      mode=Mode.TERMINATOR;
    }
 else {
      try {
        mode=Mode.forBits(bits.readBits(4));
      }
 catch (      IllegalArgumentException iae) {
        throw ReaderException.getInstance();
      }
    }
    if (!mode.equals(Mode.TERMINATOR)) {
      if (mode.equals(Mode.FNC1_FIRST_POSITION) || mode.equals(Mode.FNC1_SECOND_POSITION)) {
        fc1InEffect=true;
      }
 else       if (mode.equals(Mode.STRUCTURED_APPEND)) {
        bits.readBits(16);
      }
 else       if (mode.equals(Mode.ECI)) {
        int value=parseECIValue(bits);
        currentCharacterSetECI=CharacterSetECI.getCharacterSetECIByValue(value);
        if (currentCharacterSetECI == null) {
          throw ReaderException.getInstance();
        }
      }
 else {
        int count=bits.readBits(mode.getCharacterCountBits(version));
        if (mode.equals(Mode.NUMERIC)) {
          decodeNumericSegment(bits,result,count);
        }
 else         if (mode.equals(Mode.ALPHANUMERIC)) {
          decodeAlphanumericSegment(bits,result,count,fc1InEffect);
        }
 else         if (mode.equals(Mode.BYTE)) {
          decodeByteSegment(bits,result,count,currentCharacterSetECI,byteSegments);
        }
 else         if (mode.equals(Mode.KANJI)) {
          decodeKanjiSegment(bits,result,count);
        }
 else {
          throw ReaderException.getInstance();
        }
      }
    }
  }
 while (!mode.equals(Mode.TERMINATOR));
  return new DecoderResult(bytes,result.toString(),byteSegments.isEmpty() ? null : byteSegments,ecLevel);
}
