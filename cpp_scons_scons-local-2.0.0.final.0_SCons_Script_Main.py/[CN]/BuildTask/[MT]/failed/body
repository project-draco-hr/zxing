def failed(self):
    exc_info = self.exc_info()
    try:
        (t, e, tb) = exc_info
    except ValueError:
        (t, e) = exc_info
        tb = None
    if (t is None):
        try:
            (t, e, tb) = sys.exc_info()[:]
        except ValueError:
            (t, e) = exc_info
            tb = None
    if (e is None):
        e = t
    buildError = SCons.Errors.convert_to_BuildError(e)
    if (not buildError.node):
        buildError.node = self.node
    node = buildError.node
    if (not SCons.Util.is_List(node)):
        node = [node]
    nodename = ', '.join(map(str, node))
    errfmt = 'scons: *** [%s] %s\n'
    sys.stderr.write((errfmt % (nodename, buildError)))
    if (buildError.exc_info[2] and buildError.exc_info[1] and (not isinstance(buildError.exc_info[1], (EnvironmentError, SCons.Errors.StopError, SCons.Errors.UserError)))):
        (type, value, trace) = buildError.exc_info
        traceback.print_exception(type, value, trace)
    elif (tb and print_stacktrace):
        sys.stderr.write('scons: internal stack trace:\n')
        traceback.print_tb(tb, file=sys.stderr)
    self.exception = (e, buildError, tb)
    self.do_failed(buildError.exitstatus)
    self.exc_clear()
