{
  if (args == null || args.length == 0) {
    printUsage();
    return;
  }
  boolean tryHarder=false;
  boolean pureBarcode=false;
  boolean productsOnly=false;
  boolean dumpResults=false;
  boolean dumpBlackPoint=false;
  boolean multi=false;
  int[] crop=null;
  for (  String arg : args) {
    if ("--try_harder".equals(arg)) {
      tryHarder=true;
    }
 else     if ("--pure_barcode".equals(arg)) {
      pureBarcode=true;
    }
 else     if ("--products_only".equals(arg)) {
      productsOnly=true;
    }
 else     if ("--dump_results".equals(arg)) {
      dumpResults=true;
    }
 else     if ("--dump_black_point".equals(arg)) {
      dumpBlackPoint=true;
    }
 else     if ("--multi".equals(arg)) {
      multi=true;
    }
 else     if (arg.startsWith("--crop")) {
      crop=new int[4];
      String[] tokens=arg.substring(7).split(",");
      for (int i=0; i < crop.length; i++) {
        crop[i]=Integer.parseInt(tokens[i]);
      }
    }
 else     if (arg.startsWith("-")) {
      System.err.println("Unknown command line option " + arg);
      printUsage();
      return;
    }
  }
  Hashtable<DecodeHintType,Object> hints=buildHints(tryHarder,pureBarcode,productsOnly);
  for (  String arg : args) {
    if (!arg.startsWith("--")) {
      decodeOneArgument(arg,hints,dumpResults,dumpBlackPoint,crop,multi);
    }
  }
}
