{
  Hashtable<DecodeHintType,Object> hints=new Hashtable<DecodeHintType,Object>(3);
  Vector<BarcodeFormat> vector=new Vector<BarcodeFormat>(8);
  vector.addElement(BarcodeFormat.UPC_A);
  vector.addElement(BarcodeFormat.UPC_E);
  vector.addElement(BarcodeFormat.EAN_13);
  vector.addElement(BarcodeFormat.EAN_8);
  vector.addElement(BarcodeFormat.RSS_14);
  vector.addElement(BarcodeFormat.RSS_EXPANDED);
  if (!config.isProductsOnly()) {
    vector.addElement(BarcodeFormat.CODE_39);
    vector.addElement(BarcodeFormat.CODE_93);
    vector.addElement(BarcodeFormat.CODE_128);
    vector.addElement(BarcodeFormat.ITF);
    vector.addElement(BarcodeFormat.QR_CODE);
    vector.addElement(BarcodeFormat.DATA_MATRIX);
    vector.addElement(BarcodeFormat.AZTEC);
    vector.addElement(BarcodeFormat.PDF_417);
    vector.addElement(BarcodeFormat.CODABAR);
  }
  hints.put(DecodeHintType.POSSIBLE_FORMATS,vector);
  if (config.isTryHarder()) {
    hints.put(DecodeHintType.TRY_HARDER,Boolean.TRUE);
  }
  if (config.isPureBarcode()) {
    hints.put(DecodeHintType.PURE_BARCODE,Boolean.TRUE);
  }
  return hints;
}
