def cleanup(self):
    '\n        Check for dependency cycles.\n        '
    if (not self.pending_children):
        return
    nclist = [(n, find_cycle([n], set())) for n in self.pending_children]
    genuine_cycles = [node for (node, cycle) in nclist if (cycle or (node.get_state() != NODE_EXECUTED))]
    if (not genuine_cycles):
        return
    desc = 'Found dependency cycle(s):\n'
    for (node, cycle) in nclist:
        if cycle:
            desc = (((desc + '  ') + ' -> '.join(map(str, cycle))) + '\n')
        else:
            desc = (desc + ('  Internal Error: no cycle found for node %s (%s) in state %s\n' % (node, repr(node), StateString[node.get_state()])))
    raise SCons.Errors.UserError(desc)
