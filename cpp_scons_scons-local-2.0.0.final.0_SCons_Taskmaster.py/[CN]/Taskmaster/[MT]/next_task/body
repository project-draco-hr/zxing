def next_task(self):
    '\n        Returns the next task to be executed.\n\n        This simply asks for the next Node to be evaluated, and then wraps\n        it in the specific Task subclass with which we were initialized.\n        '
    node = self._find_next_ready_node()
    if (node is None):
        return None
    tlist = node.get_executor().get_all_targets()
    task = self.tasker(self, tlist, (node in self.original_top), node)
    try:
        task.make_ready()
    except:
        self.ready_exc = sys.exc_info()
    if self.ready_exc:
        task.exception_set(self.ready_exc)
    self.ready_exc = None
    return task
