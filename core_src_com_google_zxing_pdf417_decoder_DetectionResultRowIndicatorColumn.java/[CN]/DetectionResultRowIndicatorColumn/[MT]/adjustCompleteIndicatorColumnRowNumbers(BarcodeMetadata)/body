{
  Codeword[] codewords=getCodewords();
  setRowNumbers();
  removeIncorrectCodewords(codewords,barcodeMetadata);
  BoundingBox boundingBox=getBoundingBox();
  ResultPoint top=isLeft ? boundingBox.getTopLeft() : boundingBox.getTopRight();
  ResultPoint bottom=isLeft ? boundingBox.getBottomLeft() : boundingBox.getBottomRight();
  int firstRow=imageRowToCodewordIndex((int)top.getY());
  int lastRow=imageRowToCodewordIndex((int)bottom.getY());
  float averageRowHeight=(lastRow - firstRow) / (float)barcodeMetadata.getRowCount();
  int barcodeRow=-1;
  int maxRowHeight=1;
  int currentRowHeight=0;
  for (int codewordsRow=firstRow; codewordsRow < lastRow; codewordsRow++) {
    if (codewords[codewordsRow] == null) {
      continue;
    }
    Codeword codeword=codewords[codewordsRow];
    int rowDifference=codeword.getRowNumber() - barcodeRow;
    if (rowDifference == 0) {
      currentRowHeight++;
    }
 else     if (rowDifference == 1) {
      maxRowHeight=Math.max(maxRowHeight,currentRowHeight);
      currentRowHeight=1;
      barcodeRow=codeword.getRowNumber();
    }
 else     if (rowDifference < 0) {
      codewords[codewordsRow]=null;
    }
 else     if (codeword.getRowNumber() >= barcodeMetadata.getRowCount()) {
      codewords[codewordsRow]=null;
    }
 else     if (rowDifference > codewordsRow) {
      codewords[codewordsRow]=null;
    }
 else {
      int checkedRows;
      if (maxRowHeight > 2) {
        checkedRows=(maxRowHeight - 2) * rowDifference;
      }
 else {
        checkedRows=rowDifference;
      }
      boolean closePreviousCodewordFound=checkedRows >= codewordsRow;
      for (int i=1; i <= checkedRows && !closePreviousCodewordFound; i++) {
        closePreviousCodewordFound=codewords[codewordsRow - i] != null;
      }
      if (closePreviousCodewordFound) {
        codewords[codewordsRow]=null;
      }
 else {
        barcodeRow=codeword.getRowNumber();
        currentRowHeight=1;
      }
    }
  }
  return (int)(averageRowHeight + 0.5);
}
