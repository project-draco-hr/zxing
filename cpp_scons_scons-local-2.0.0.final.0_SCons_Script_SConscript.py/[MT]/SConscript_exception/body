def SConscript_exception(file=sys.stderr):
    'Print an exception stack trace just for the SConscript file(s).\n    This will show users who have Python errors where the problem is,\n    without cluttering the output with all of the internal calls leading\n    up to where we exec the SConscript.'
    (exc_type, exc_value, exc_tb) = sys.exc_info()
    tb = exc_tb
    while (tb and (stack_bottom not in tb.tb_frame.f_locals)):
        tb = tb.tb_next
    if (not tb):
        tb = exc_tb
    stack = traceback.extract_tb(tb)
    try:
        type = exc_type.__name__
    except AttributeError:
        type = str(exc_type)
        if (type[:11] == 'exceptions.'):
            type = type[11:]
    file.write(('%s: %s:\n' % (type, exc_value)))
    for (fname, line, func, text) in stack:
        file.write(('  File "%s", line %d:\n' % (fname, line)))
        file.write(('    %s\n' % text))
